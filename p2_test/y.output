Terminals unused in grammar

   BREAK
   CHAR
   CASE
   CONTINUE
   EXIT
   FALSE
   FOR
   FN
   IN
   LOOP
   REPEAT
   RECORD
   TURE
   TYPE
   USE
   UTIL


State 75 conflicts: 2 reduce/reduce
State 80 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: MODULE IDENTIFIER optional_var_con_declaration Procedure_dec _BEGIN optional_statement END IDENTIFIER '.'

    2 Procedure_dec: PROCEDURE IDENTIFIER optional_arg_parentheses opt_func_type optional_var_con_declaration _BEGIN optional_statement END IDENTIFIER ';'
    3              | %empty

    4 optional_var_con_declaration: constants optional_var_con_declaration
    5                             | variables optional_var_con_declaration
    6                             | %empty

    7 constants: CONST IDENTIFIER '=' expression ';'
    8          | IDENTIFIER '=' expression ';'

    9 variables: VAR opt_IDENTIFIER ':' data_type ';'
   10          | IDENTIFIER ':' data_type ';'
   11          | IDENTIFIER ':' ARRAY '[' INT_CONST ',' INT_CONST ']' OF data_type ';'

   12 opt_IDENTIFIER: IDENTIFIER ',' opt_IDENTIFIER
   13               | IDENTIFIER

   14 optional_arg_parentheses: '(' optional_arguments ')'
   15                         | %empty

   16 optional_arguments: IDENTIFIER ':' data_type
   17                   | optional_arguments ',' IDENTIFIER ':' data_type
   18                   | %empty

   19 opt_func_type: ':' data_type
   20              | %empty

   21 data_type: STRING
   22          | INTEGER
   23          | BOOLEAN
   24          | REAL

   25 const_value: INT_CONST
   26            | BOOLEAN_CONST
   27            | REAL_CONST
   28            | STR_CONST

   29 statement: IDENTIFIER EQ expression ';'
   30          | IDENTIFIER '[' expression ']' EQ expression ';'
   31          | PRINT expression ';'
   32          | PRINTLN expression ';'
   33          | READ IDENTIFIER ';'
   34          | RETURN ';'
   35          | RETURN expression ';'
   36          | function_invocation ';'
   37          | expression ';'
   38          | conditional_statement
   39          | loop_statement

   40 expression: IDENTIFIER
   41           | const_value
   42           | function_invocation
   43           | expression '*' expression
   44           | expression '/' expression
   45           | expression '+' expression
   46           | expression '-' expression
   47           | expression '<' expression
   48           | expression '>' expression
   49           | expression '=' expression
   50           | expression LE_EQ expression
   51           | expression GR_EQ expression
   52           | NEQ expression
   53           | '~' expression
   54           | expression AND expression
   55           | expression OR expression
   56           | IDENTIFIER '[' expression ']'
   57           | '(' expression ')'
   58           | '-' expression

   59 conditional_statement: IF '(' expression ')' THEN optional_statement ELSE optional_statement END ';'
   60                      | IF '(' expression ')' THEN optional_statement END ';'

   61 loop_statement: WHILE '(' expression ')' DO optional_statement END ';'

   62 optional_statement: statement optional_statement
   63                   | statement
   64                   | %empty

   65 function_invocation: IDENTIFIER '(' optional_comma_separated_expression ')'

   66 optional_comma_separated_expression: expression
   67                                    | optional_comma_separated_expression ',' expression


Terminals, with rules where they appear

$end (0) 0
'(' (40) 14 57 59 60 61 65
')' (41) 14 57 59 60 61 65
'*' (42) 43
'+' (43) 45
',' (44) 11 12 17 67
'-' (45) 46 58
'.' (46) 1
'/' (47) 44
':' (58) 9 10 11 16 17 19
';' (59) 2 7 8 9 10 11 29 30 31 32 33 34 35 36 37 59 60 61
'<' (60) 47
'=' (61) 7 8 49
'>' (62) 48
'[' (91) 11 30 56
']' (93) 11 30 56
'~' (126) 53
error (256)
AND (258) 54
OR (259) 55
EQ (260) 29 30
LE_EQ (261) 50
GR_EQ (262) 51
NEQ (263) 52
ARRAY (264) 11
BOOLEAN (265) 23
_BEGIN (266) 1 2
BREAK (267)
CHAR (268)
CASE (269)
CONST (270) 7
CONTINUE (271)
DO (272) 61
ELSE (273) 59
END (274) 1 2 59 60 61
EXIT (275)
FALSE (276)
FOR (277)
FN (278)
IF (279) 59 60
IN (280)
INTEGER (281) 22
LOOP (282)
MODULE (283) 1
PRINT (284) 31
PRINTLN (285) 32
PROCEDURE (286) 2
REPEAT (287)
RETURN (288) 34 35
REAL (289) 24
STRING (290) 21
RECORD (291)
THEN (292) 59 60
TURE (293)
TYPE (294)
USE (295)
UTIL (296)
VAR (297) 9
WHILE (298) 61
OF (299) 11
READ (300) 33
IDENTIFIER (301) 1 2 7 8 10 11 12 13 16 17 29 30 33 40 56 65
INT_CONST (302) 11 25
REAL_CONST (303) 27
STR_CONST (304) 28
BOOLEAN_CONST (305) 26
UMINUS (306)


Nonterminals, with rules where they appear

$accept (68)
    on left: 0
program (69)
    on left: 1, on right: 0
Procedure_dec (70)
    on left: 2 3, on right: 1
optional_var_con_declaration (71)
    on left: 4 5 6, on right: 1 2 4 5
constants (72)
    on left: 7 8, on right: 4
variables (73)
    on left: 9 10 11, on right: 5
opt_IDENTIFIER (74)
    on left: 12 13, on right: 9 12
optional_arg_parentheses (75)
    on left: 14 15, on right: 2
optional_arguments (76)
    on left: 16 17 18, on right: 14 17
opt_func_type (77)
    on left: 19 20, on right: 2
data_type (78)
    on left: 21 22 23 24, on right: 9 10 11 16 17 19
const_value (79)
    on left: 25 26 27 28, on right: 41
statement (80)
    on left: 29 30 31 32 33 34 35 36 37 38 39, on right: 62 63
expression (81)
    on left: 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57
    58, on right: 7 8 29 30 31 32 35 37 43 44 45 46 47 48 49 50 51
    52 53 54 55 56 57 58 59 60 61 66 67
conditional_statement (82)
    on left: 59 60, on right: 38
loop_statement (83)
    on left: 61, on right: 39
optional_statement (84)
    on left: 62 63 64, on right: 1 2 59 60 61 62
function_invocation (85)
    on left: 65, on right: 36 42
optional_comma_separated_expression (86)
    on left: 66 67, on right: 65 67


State 0

    0 $accept: . program $end

    MODULE  shift, and go to state 1

    program  go to state 2


State 1

    1 program: MODULE . IDENTIFIER optional_var_con_declaration Procedure_dec _BEGIN optional_statement END IDENTIFIER '.'

    IDENTIFIER  shift, and go to state 3


State 2

    0 $accept: program . $end

    $end  shift, and go to state 4


State 3

    1 program: MODULE IDENTIFIER . optional_var_con_declaration Procedure_dec _BEGIN optional_statement END IDENTIFIER '.'

    CONST       shift, and go to state 5
    VAR         shift, and go to state 6
    IDENTIFIER  shift, and go to state 7

    $default  reduce using rule 6 (optional_var_con_declaration)

    optional_var_con_declaration  go to state 8
    constants                     go to state 9
    variables                     go to state 10


State 4

    0 $accept: program $end .

    $default  accept


State 5

    7 constants: CONST . IDENTIFIER '=' expression ';'

    IDENTIFIER  shift, and go to state 11


State 6

    9 variables: VAR . opt_IDENTIFIER ':' data_type ';'

    IDENTIFIER  shift, and go to state 12

    opt_IDENTIFIER  go to state 13


State 7

    8 constants: IDENTIFIER . '=' expression ';'
   10 variables: IDENTIFIER . ':' data_type ';'
   11          | IDENTIFIER . ':' ARRAY '[' INT_CONST ',' INT_CONST ']' OF data_type ';'

    '='  shift, and go to state 14
    ':'  shift, and go to state 15


State 8

    1 program: MODULE IDENTIFIER optional_var_con_declaration . Procedure_dec _BEGIN optional_statement END IDENTIFIER '.'

    PROCEDURE  shift, and go to state 16

    $default  reduce using rule 3 (Procedure_dec)

    Procedure_dec  go to state 17


State 9

    4 optional_var_con_declaration: constants . optional_var_con_declaration

    CONST       shift, and go to state 5
    VAR         shift, and go to state 6
    IDENTIFIER  shift, and go to state 7

    $default  reduce using rule 6 (optional_var_con_declaration)

    optional_var_con_declaration  go to state 18
    constants                     go to state 9
    variables                     go to state 10


State 10

    5 optional_var_con_declaration: variables . optional_var_con_declaration

    CONST       shift, and go to state 5
    VAR         shift, and go to state 6
    IDENTIFIER  shift, and go to state 7

    $default  reduce using rule 6 (optional_var_con_declaration)

    optional_var_con_declaration  go to state 19
    constants                     go to state 9
    variables                     go to state 10


State 11

    7 constants: CONST IDENTIFIER . '=' expression ';'

    '='  shift, and go to state 20


State 12

   12 opt_IDENTIFIER: IDENTIFIER . ',' opt_IDENTIFIER
   13               | IDENTIFIER .

    ','  shift, and go to state 21

    $default  reduce using rule 13 (opt_IDENTIFIER)


State 13

    9 variables: VAR opt_IDENTIFIER . ':' data_type ';'

    ':'  shift, and go to state 22


State 14

    8 constants: IDENTIFIER '=' . expression ';'

    NEQ            shift, and go to state 23
    IDENTIFIER     shift, and go to state 24
    INT_CONST      shift, and go to state 25
    REAL_CONST     shift, and go to state 26
    STR_CONST      shift, and go to state 27
    BOOLEAN_CONST  shift, and go to state 28
    '-'            shift, and go to state 29
    '~'            shift, and go to state 30
    '('            shift, and go to state 31

    const_value          go to state 32
    expression           go to state 33
    function_invocation  go to state 34


State 15

   10 variables: IDENTIFIER ':' . data_type ';'
   11          | IDENTIFIER ':' . ARRAY '[' INT_CONST ',' INT_CONST ']' OF data_type ';'

    ARRAY    shift, and go to state 35
    BOOLEAN  shift, and go to state 36
    INTEGER  shift, and go to state 37
    REAL     shift, and go to state 38
    STRING   shift, and go to state 39

    data_type  go to state 40


State 16

    2 Procedure_dec: PROCEDURE . IDENTIFIER optional_arg_parentheses opt_func_type optional_var_con_declaration _BEGIN optional_statement END IDENTIFIER ';'

    IDENTIFIER  shift, and go to state 41


State 17

    1 program: MODULE IDENTIFIER optional_var_con_declaration Procedure_dec . _BEGIN optional_statement END IDENTIFIER '.'

    _BEGIN  shift, and go to state 42


State 18

    4 optional_var_con_declaration: constants optional_var_con_declaration .

    $default  reduce using rule 4 (optional_var_con_declaration)


State 19

    5 optional_var_con_declaration: variables optional_var_con_declaration .

    $default  reduce using rule 5 (optional_var_con_declaration)


State 20

    7 constants: CONST IDENTIFIER '=' . expression ';'

    NEQ            shift, and go to state 23
    IDENTIFIER     shift, and go to state 24
    INT_CONST      shift, and go to state 25
    REAL_CONST     shift, and go to state 26
    STR_CONST      shift, and go to state 27
    BOOLEAN_CONST  shift, and go to state 28
    '-'            shift, and go to state 29
    '~'            shift, and go to state 30
    '('            shift, and go to state 31

    const_value          go to state 32
    expression           go to state 43
    function_invocation  go to state 34


State 21

   12 opt_IDENTIFIER: IDENTIFIER ',' . opt_IDENTIFIER

    IDENTIFIER  shift, and go to state 12

    opt_IDENTIFIER  go to state 44


State 22

    9 variables: VAR opt_IDENTIFIER ':' . data_type ';'

    BOOLEAN  shift, and go to state 36
    INTEGER  shift, and go to state 37
    REAL     shift, and go to state 38
    STRING   shift, and go to state 39

    data_type  go to state 45


State 23

   52 expression: NEQ . expression

    NEQ            shift, and go to state 23
    IDENTIFIER     shift, and go to state 24
    INT_CONST      shift, and go to state 25
    REAL_CONST     shift, and go to state 26
    STR_CONST      shift, and go to state 27
    BOOLEAN_CONST  shift, and go to state 28
    '-'            shift, and go to state 29
    '~'            shift, and go to state 30
    '('            shift, and go to state 31

    const_value          go to state 32
    expression           go to state 46
    function_invocation  go to state 34


State 24

   40 expression: IDENTIFIER .
   56           | IDENTIFIER . '[' expression ']'
   65 function_invocation: IDENTIFIER . '(' optional_comma_separated_expression ')'

    '['  shift, and go to state 47
    '('  shift, and go to state 48

    $default  reduce using rule 40 (expression)


State 25

   25 const_value: INT_CONST .

    $default  reduce using rule 25 (const_value)


State 26

   27 const_value: REAL_CONST .

    $default  reduce using rule 27 (const_value)


State 27

   28 const_value: STR_CONST .

    $default  reduce using rule 28 (const_value)


State 28

   26 const_value: BOOLEAN_CONST .

    $default  reduce using rule 26 (const_value)


State 29

   58 expression: '-' . expression

    NEQ            shift, and go to state 23
    IDENTIFIER     shift, and go to state 24
    INT_CONST      shift, and go to state 25
    REAL_CONST     shift, and go to state 26
    STR_CONST      shift, and go to state 27
    BOOLEAN_CONST  shift, and go to state 28
    '-'            shift, and go to state 29
    '~'            shift, and go to state 30
    '('            shift, and go to state 31

    const_value          go to state 32
    expression           go to state 49
    function_invocation  go to state 34


State 30

   53 expression: '~' . expression

    NEQ            shift, and go to state 23
    IDENTIFIER     shift, and go to state 24
    INT_CONST      shift, and go to state 25
    REAL_CONST     shift, and go to state 26
    STR_CONST      shift, and go to state 27
    BOOLEAN_CONST  shift, and go to state 28
    '-'            shift, and go to state 29
    '~'            shift, and go to state 30
    '('            shift, and go to state 31

    const_value          go to state 32
    expression           go to state 50
    function_invocation  go to state 34


State 31

   57 expression: '(' . expression ')'

    NEQ            shift, and go to state 23
    IDENTIFIER     shift, and go to state 24
    INT_CONST      shift, and go to state 25
    REAL_CONST     shift, and go to state 26
    STR_CONST      shift, and go to state 27
    BOOLEAN_CONST  shift, and go to state 28
    '-'            shift, and go to state 29
    '~'            shift, and go to state 30
    '('            shift, and go to state 31

    const_value          go to state 32
    expression           go to state 51
    function_invocation  go to state 34


State 32

   41 expression: const_value .

    $default  reduce using rule 41 (expression)


State 33

    8 constants: IDENTIFIER '=' expression . ';'
   43 expression: expression . '*' expression
   44           | expression . '/' expression
   45           | expression . '+' expression
   46           | expression . '-' expression
   47           | expression . '<' expression
   48           | expression . '>' expression
   49           | expression . '=' expression
   50           | expression . LE_EQ expression
   51           | expression . GR_EQ expression
   54           | expression . AND expression
   55           | expression . OR expression

    AND    shift, and go to state 52
    OR     shift, and go to state 53
    LE_EQ  shift, and go to state 54
    GR_EQ  shift, and go to state 55
    '*'    shift, and go to state 56
    '/'    shift, and go to state 57
    '+'    shift, and go to state 58
    '-'    shift, and go to state 59
    '<'    shift, and go to state 60
    '='    shift, and go to state 61
    '>'    shift, and go to state 62
    ';'    shift, and go to state 63


State 34

   42 expression: function_invocation .

    $default  reduce using rule 42 (expression)


State 35

   11 variables: IDENTIFIER ':' ARRAY . '[' INT_CONST ',' INT_CONST ']' OF data_type ';'

    '['  shift, and go to state 64


State 36

   23 data_type: BOOLEAN .

    $default  reduce using rule 23 (data_type)


State 37

   22 data_type: INTEGER .

    $default  reduce using rule 22 (data_type)


State 38

   24 data_type: REAL .

    $default  reduce using rule 24 (data_type)


State 39

   21 data_type: STRING .

    $default  reduce using rule 21 (data_type)


State 40

   10 variables: IDENTIFIER ':' data_type . ';'

    ';'  shift, and go to state 65


State 41

    2 Procedure_dec: PROCEDURE IDENTIFIER . optional_arg_parentheses opt_func_type optional_var_con_declaration _BEGIN optional_statement END IDENTIFIER ';'

    '('  shift, and go to state 66

    $default  reduce using rule 15 (optional_arg_parentheses)

    optional_arg_parentheses  go to state 67


State 42

    1 program: MODULE IDENTIFIER optional_var_con_declaration Procedure_dec _BEGIN . optional_statement END IDENTIFIER '.'

    NEQ            shift, and go to state 23
    IF             shift, and go to state 68
    PRINT          shift, and go to state 69
    PRINTLN        shift, and go to state 70
    RETURN         shift, and go to state 71
    WHILE          shift, and go to state 72
    READ           shift, and go to state 73
    IDENTIFIER     shift, and go to state 74
    INT_CONST      shift, and go to state 25
    REAL_CONST     shift, and go to state 26
    STR_CONST      shift, and go to state 27
    BOOLEAN_CONST  shift, and go to state 28
    '-'            shift, and go to state 29
    '~'            shift, and go to state 30
    '('            shift, and go to state 31

    $default  reduce using rule 64 (optional_statement)

    const_value            go to state 32
    statement              go to state 75
    expression             go to state 76
    conditional_statement  go to state 77
    loop_statement         go to state 78
    optional_statement     go to state 79
    function_invocation    go to state 80


State 43

    7 constants: CONST IDENTIFIER '=' expression . ';'
   43 expression: expression . '*' expression
   44           | expression . '/' expression
   45           | expression . '+' expression
   46           | expression . '-' expression
   47           | expression . '<' expression
   48           | expression . '>' expression
   49           | expression . '=' expression
   50           | expression . LE_EQ expression
   51           | expression . GR_EQ expression
   54           | expression . AND expression
   55           | expression . OR expression

    AND    shift, and go to state 52
    OR     shift, and go to state 53
    LE_EQ  shift, and go to state 54
    GR_EQ  shift, and go to state 55
    '*'    shift, and go to state 56
    '/'    shift, and go to state 57
    '+'    shift, and go to state 58
    '-'    shift, and go to state 59
    '<'    shift, and go to state 60
    '='    shift, and go to state 61
    '>'    shift, and go to state 62
    ';'    shift, and go to state 81


State 44

   12 opt_IDENTIFIER: IDENTIFIER ',' opt_IDENTIFIER .

    $default  reduce using rule 12 (opt_IDENTIFIER)


State 45

    9 variables: VAR opt_IDENTIFIER ':' data_type . ';'

    ';'  shift, and go to state 82


State 46

   43 expression: expression . '*' expression
   44           | expression . '/' expression
   45           | expression . '+' expression
   46           | expression . '-' expression
   47           | expression . '<' expression
   48           | expression . '>' expression
   49           | expression . '=' expression
   50           | expression . LE_EQ expression
   51           | expression . GR_EQ expression
   52           | NEQ expression .
   54           | expression . AND expression
   55           | expression . OR expression

    AND  shift, and go to state 52
    OR   shift, and go to state 53

    $default  reduce using rule 52 (expression)


State 47

   56 expression: IDENTIFIER '[' . expression ']'

    NEQ            shift, and go to state 23
    IDENTIFIER     shift, and go to state 24
    INT_CONST      shift, and go to state 25
    REAL_CONST     shift, and go to state 26
    STR_CONST      shift, and go to state 27
    BOOLEAN_CONST  shift, and go to state 28
    '-'            shift, and go to state 29
    '~'            shift, and go to state 30
    '('            shift, and go to state 31

    const_value          go to state 32
    expression           go to state 83
    function_invocation  go to state 34


State 48

   65 function_invocation: IDENTIFIER '(' . optional_comma_separated_expression ')'

    NEQ            shift, and go to state 23
    IDENTIFIER     shift, and go to state 24
    INT_CONST      shift, and go to state 25
    REAL_CONST     shift, and go to state 26
    STR_CONST      shift, and go to state 27
    BOOLEAN_CONST  shift, and go to state 28
    '-'            shift, and go to state 29
    '~'            shift, and go to state 30
    '('            shift, and go to state 31

    const_value                          go to state 32
    expression                           go to state 84
    function_invocation                  go to state 34
    optional_comma_separated_expression  go to state 85


State 49

   43 expression: expression . '*' expression
   44           | expression . '/' expression
   45           | expression . '+' expression
   46           | expression . '-' expression
   47           | expression . '<' expression
   48           | expression . '>' expression
   49           | expression . '=' expression
   50           | expression . LE_EQ expression
   51           | expression . GR_EQ expression
   54           | expression . AND expression
   55           | expression . OR expression
   58           | '-' expression .

    $default  reduce using rule 58 (expression)


State 50

   43 expression: expression . '*' expression
   44           | expression . '/' expression
   45           | expression . '+' expression
   46           | expression . '-' expression
   47           | expression . '<' expression
   48           | expression . '>' expression
   49           | expression . '=' expression
   50           | expression . LE_EQ expression
   51           | expression . GR_EQ expression
   53           | '~' expression .
   54           | expression . AND expression
   55           | expression . OR expression

    AND  shift, and go to state 52
    OR   shift, and go to state 53

    $default  reduce using rule 53 (expression)


State 51

   43 expression: expression . '*' expression
   44           | expression . '/' expression
   45           | expression . '+' expression
   46           | expression . '-' expression
   47           | expression . '<' expression
   48           | expression . '>' expression
   49           | expression . '=' expression
   50           | expression . LE_EQ expression
   51           | expression . GR_EQ expression
   54           | expression . AND expression
   55           | expression . OR expression
   57           | '(' expression . ')'

    AND    shift, and go to state 52
    OR     shift, and go to state 53
    LE_EQ  shift, and go to state 54
    GR_EQ  shift, and go to state 55
    '*'    shift, and go to state 56
    '/'    shift, and go to state 57
    '+'    shift, and go to state 58
    '-'    shift, and go to state 59
    '<'    shift, and go to state 60
    '='    shift, and go to state 61
    '>'    shift, and go to state 62
    ')'    shift, and go to state 86


State 52

   54 expression: expression AND . expression

    NEQ            shift, and go to state 23
    IDENTIFIER     shift, and go to state 24
    INT_CONST      shift, and go to state 25
    REAL_CONST     shift, and go to state 26
    STR_CONST      shift, and go to state 27
    BOOLEAN_CONST  shift, and go to state 28
    '-'            shift, and go to state 29
    '~'            shift, and go to state 30
    '('            shift, and go to state 31

    const_value          go to state 32
    expression           go to state 87
    function_invocation  go to state 34


State 53

   55 expression: expression OR . expression

    NEQ            shift, and go to state 23
    IDENTIFIER     shift, and go to state 24
    INT_CONST      shift, and go to state 25
    REAL_CONST     shift, and go to state 26
    STR_CONST      shift, and go to state 27
    BOOLEAN_CONST  shift, and go to state 28
    '-'            shift, and go to state 29
    '~'            shift, and go to state 30
    '('            shift, and go to state 31

    const_value          go to state 32
    expression           go to state 88
    function_invocation  go to state 34


State 54

   50 expression: expression LE_EQ . expression

    NEQ            shift, and go to state 23
    IDENTIFIER     shift, and go to state 24
    INT_CONST      shift, and go to state 25
    REAL_CONST     shift, and go to state 26
    STR_CONST      shift, and go to state 27
    BOOLEAN_CONST  shift, and go to state 28
    '-'            shift, and go to state 29
    '~'            shift, and go to state 30
    '('            shift, and go to state 31

    const_value          go to state 32
    expression           go to state 89
    function_invocation  go to state 34


State 55

   51 expression: expression GR_EQ . expression

    NEQ            shift, and go to state 23
    IDENTIFIER     shift, and go to state 24
    INT_CONST      shift, and go to state 25
    REAL_CONST     shift, and go to state 26
    STR_CONST      shift, and go to state 27
    BOOLEAN_CONST  shift, and go to state 28
    '-'            shift, and go to state 29
    '~'            shift, and go to state 30
    '('            shift, and go to state 31

    const_value          go to state 32
    expression           go to state 90
    function_invocation  go to state 34


State 56

   43 expression: expression '*' . expression

    NEQ            shift, and go to state 23
    IDENTIFIER     shift, and go to state 24
    INT_CONST      shift, and go to state 25
    REAL_CONST     shift, and go to state 26
    STR_CONST      shift, and go to state 27
    BOOLEAN_CONST  shift, and go to state 28
    '-'            shift, and go to state 29
    '~'            shift, and go to state 30
    '('            shift, and go to state 31

    const_value          go to state 32
    expression           go to state 91
    function_invocation  go to state 34


State 57

   44 expression: expression '/' . expression

    NEQ            shift, and go to state 23
    IDENTIFIER     shift, and go to state 24
    INT_CONST      shift, and go to state 25
    REAL_CONST     shift, and go to state 26
    STR_CONST      shift, and go to state 27
    BOOLEAN_CONST  shift, and go to state 28
    '-'            shift, and go to state 29
    '~'            shift, and go to state 30
    '('            shift, and go to state 31

    const_value          go to state 32
    expression           go to state 92
    function_invocation  go to state 34


State 58

   45 expression: expression '+' . expression

    NEQ            shift, and go to state 23
    IDENTIFIER     shift, and go to state 24
    INT_CONST      shift, and go to state 25
    REAL_CONST     shift, and go to state 26
    STR_CONST      shift, and go to state 27
    BOOLEAN_CONST  shift, and go to state 28
    '-'            shift, and go to state 29
    '~'            shift, and go to state 30
    '('            shift, and go to state 31

    const_value          go to state 32
    expression           go to state 93
    function_invocation  go to state 34


State 59

   46 expression: expression '-' . expression

    NEQ            shift, and go to state 23
    IDENTIFIER     shift, and go to state 24
    INT_CONST      shift, and go to state 25
    REAL_CONST     shift, and go to state 26
    STR_CONST      shift, and go to state 27
    BOOLEAN_CONST  shift, and go to state 28
    '-'            shift, and go to state 29
    '~'            shift, and go to state 30
    '('            shift, and go to state 31

    const_value          go to state 32
    expression           go to state 94
    function_invocation  go to state 34


State 60

   47 expression: expression '<' . expression

    NEQ            shift, and go to state 23
    IDENTIFIER     shift, and go to state 24
    INT_CONST      shift, and go to state 25
    REAL_CONST     shift, and go to state 26
    STR_CONST      shift, and go to state 27
    BOOLEAN_CONST  shift, and go to state 28
    '-'            shift, and go to state 29
    '~'            shift, and go to state 30
    '('            shift, and go to state 31

    const_value          go to state 32
    expression           go to state 95
    function_invocation  go to state 34


State 61

   49 expression: expression '=' . expression

    NEQ            shift, and go to state 23
    IDENTIFIER     shift, and go to state 24
    INT_CONST      shift, and go to state 25
    REAL_CONST     shift, and go to state 26
    STR_CONST      shift, and go to state 27
    BOOLEAN_CONST  shift, and go to state 28
    '-'            shift, and go to state 29
    '~'            shift, and go to state 30
    '('            shift, and go to state 31

    const_value          go to state 32
    expression           go to state 96
    function_invocation  go to state 34


State 62

   48 expression: expression '>' . expression

    NEQ            shift, and go to state 23
    IDENTIFIER     shift, and go to state 24
    INT_CONST      shift, and go to state 25
    REAL_CONST     shift, and go to state 26
    STR_CONST      shift, and go to state 27
    BOOLEAN_CONST  shift, and go to state 28
    '-'            shift, and go to state 29
    '~'            shift, and go to state 30
    '('            shift, and go to state 31

    const_value          go to state 32
    expression           go to state 97
    function_invocation  go to state 34


State 63

    8 constants: IDENTIFIER '=' expression ';' .

    $default  reduce using rule 8 (constants)


State 64

   11 variables: IDENTIFIER ':' ARRAY '[' . INT_CONST ',' INT_CONST ']' OF data_type ';'

    INT_CONST  shift, and go to state 98


State 65

   10 variables: IDENTIFIER ':' data_type ';' .

    $default  reduce using rule 10 (variables)


State 66

   14 optional_arg_parentheses: '(' . optional_arguments ')'

    IDENTIFIER  shift, and go to state 99

    $default  reduce using rule 18 (optional_arguments)

    optional_arguments  go to state 100


State 67

    2 Procedure_dec: PROCEDURE IDENTIFIER optional_arg_parentheses . opt_func_type optional_var_con_declaration _BEGIN optional_statement END IDENTIFIER ';'

    ':'  shift, and go to state 101

    $default  reduce using rule 20 (opt_func_type)

    opt_func_type  go to state 102


State 68

   59 conditional_statement: IF . '(' expression ')' THEN optional_statement ELSE optional_statement END ';'
   60                      | IF . '(' expression ')' THEN optional_statement END ';'

    '('  shift, and go to state 103


State 69

   31 statement: PRINT . expression ';'

    NEQ            shift, and go to state 23
    IDENTIFIER     shift, and go to state 24
    INT_CONST      shift, and go to state 25
    REAL_CONST     shift, and go to state 26
    STR_CONST      shift, and go to state 27
    BOOLEAN_CONST  shift, and go to state 28
    '-'            shift, and go to state 29
    '~'            shift, and go to state 30
    '('            shift, and go to state 31

    const_value          go to state 32
    expression           go to state 104
    function_invocation  go to state 34


State 70

   32 statement: PRINTLN . expression ';'

    NEQ            shift, and go to state 23
    IDENTIFIER     shift, and go to state 24
    INT_CONST      shift, and go to state 25
    REAL_CONST     shift, and go to state 26
    STR_CONST      shift, and go to state 27
    BOOLEAN_CONST  shift, and go to state 28
    '-'            shift, and go to state 29
    '~'            shift, and go to state 30
    '('            shift, and go to state 31

    const_value          go to state 32
    expression           go to state 105
    function_invocation  go to state 34


State 71

   34 statement: RETURN . ';'
   35          | RETURN . expression ';'

    NEQ            shift, and go to state 23
    IDENTIFIER     shift, and go to state 24
    INT_CONST      shift, and go to state 25
    REAL_CONST     shift, and go to state 26
    STR_CONST      shift, and go to state 27
    BOOLEAN_CONST  shift, and go to state 28
    '-'            shift, and go to state 29
    '~'            shift, and go to state 30
    ';'            shift, and go to state 106
    '('            shift, and go to state 31

    const_value          go to state 32
    expression           go to state 107
    function_invocation  go to state 34


State 72

   61 loop_statement: WHILE . '(' expression ')' DO optional_statement END ';'

    '('  shift, and go to state 108


State 73

   33 statement: READ . IDENTIFIER ';'

    IDENTIFIER  shift, and go to state 109


State 74

   29 statement: IDENTIFIER . EQ expression ';'
   30          | IDENTIFIER . '[' expression ']' EQ expression ';'
   40 expression: IDENTIFIER .
   56           | IDENTIFIER . '[' expression ']'
   65 function_invocation: IDENTIFIER . '(' optional_comma_separated_expression ')'

    EQ   shift, and go to state 110
    '['  shift, and go to state 111
    '('  shift, and go to state 48

    $default  reduce using rule 40 (expression)


State 75

   62 optional_statement: statement . optional_statement
   63                   | statement .

    NEQ            shift, and go to state 23
    IF             shift, and go to state 68
    PRINT          shift, and go to state 69
    PRINTLN        shift, and go to state 70
    RETURN         shift, and go to state 71
    WHILE          shift, and go to state 72
    READ           shift, and go to state 73
    IDENTIFIER     shift, and go to state 74
    INT_CONST      shift, and go to state 25
    REAL_CONST     shift, and go to state 26
    STR_CONST      shift, and go to state 27
    BOOLEAN_CONST  shift, and go to state 28
    '-'            shift, and go to state 29
    '~'            shift, and go to state 30
    '('            shift, and go to state 31

    ELSE      reduce using rule 63 (optional_statement)
    ELSE      [reduce using rule 64 (optional_statement)]
    END       reduce using rule 63 (optional_statement)
    END       [reduce using rule 64 (optional_statement)]
    $default  reduce using rule 63 (optional_statement)

    const_value            go to state 32
    statement              go to state 75
    expression             go to state 76
    conditional_statement  go to state 77
    loop_statement         go to state 78
    optional_statement     go to state 112
    function_invocation    go to state 80


State 76

   37 statement: expression . ';'
   43 expression: expression . '*' expression
   44           | expression . '/' expression
   45           | expression . '+' expression
   46           | expression . '-' expression
   47           | expression . '<' expression
   48           | expression . '>' expression
   49           | expression . '=' expression
   50           | expression . LE_EQ expression
   51           | expression . GR_EQ expression
   54           | expression . AND expression
   55           | expression . OR expression

    AND    shift, and go to state 52
    OR     shift, and go to state 53
    LE_EQ  shift, and go to state 54
    GR_EQ  shift, and go to state 55
    '*'    shift, and go to state 56
    '/'    shift, and go to state 57
    '+'    shift, and go to state 58
    '-'    shift, and go to state 59
    '<'    shift, and go to state 60
    '='    shift, and go to state 61
    '>'    shift, and go to state 62
    ';'    shift, and go to state 113


State 77

   38 statement: conditional_statement .

    $default  reduce using rule 38 (statement)


State 78

   39 statement: loop_statement .

    $default  reduce using rule 39 (statement)


State 79

    1 program: MODULE IDENTIFIER optional_var_con_declaration Procedure_dec _BEGIN optional_statement . END IDENTIFIER '.'

    END  shift, and go to state 114


State 80

   36 statement: function_invocation . ';'
   42 expression: function_invocation .

    ';'  shift, and go to state 115

    ';'       [reduce using rule 42 (expression)]
    $default  reduce using rule 42 (expression)


State 81

    7 constants: CONST IDENTIFIER '=' expression ';' .

    $default  reduce using rule 7 (constants)


State 82

    9 variables: VAR opt_IDENTIFIER ':' data_type ';' .

    $default  reduce using rule 9 (variables)


State 83

   43 expression: expression . '*' expression
   44           | expression . '/' expression
   45           | expression . '+' expression
   46           | expression . '-' expression
   47           | expression . '<' expression
   48           | expression . '>' expression
   49           | expression . '=' expression
   50           | expression . LE_EQ expression
   51           | expression . GR_EQ expression
   54           | expression . AND expression
   55           | expression . OR expression
   56           | IDENTIFIER '[' expression . ']'

    AND    shift, and go to state 52
    OR     shift, and go to state 53
    LE_EQ  shift, and go to state 54
    GR_EQ  shift, and go to state 55
    '*'    shift, and go to state 56
    '/'    shift, and go to state 57
    '+'    shift, and go to state 58
    '-'    shift, and go to state 59
    '<'    shift, and go to state 60
    '='    shift, and go to state 61
    '>'    shift, and go to state 62
    ']'    shift, and go to state 116


State 84

   43 expression: expression . '*' expression
   44           | expression . '/' expression
   45           | expression . '+' expression
   46           | expression . '-' expression
   47           | expression . '<' expression
   48           | expression . '>' expression
   49           | expression . '=' expression
   50           | expression . LE_EQ expression
   51           | expression . GR_EQ expression
   54           | expression . AND expression
   55           | expression . OR expression
   66 optional_comma_separated_expression: expression .

    AND    shift, and go to state 52
    OR     shift, and go to state 53
    LE_EQ  shift, and go to state 54
    GR_EQ  shift, and go to state 55
    '*'    shift, and go to state 56
    '/'    shift, and go to state 57
    '+'    shift, and go to state 58
    '-'    shift, and go to state 59
    '<'    shift, and go to state 60
    '='    shift, and go to state 61
    '>'    shift, and go to state 62

    $default  reduce using rule 66 (optional_comma_separated_expression)


State 85

   65 function_invocation: IDENTIFIER '(' optional_comma_separated_expression . ')'
   67 optional_comma_separated_expression: optional_comma_separated_expression . ',' expression

    ','  shift, and go to state 117
    ')'  shift, and go to state 118


State 86

   57 expression: '(' expression ')' .

    $default  reduce using rule 57 (expression)


State 87

   43 expression: expression . '*' expression
   44           | expression . '/' expression
   45           | expression . '+' expression
   46           | expression . '-' expression
   47           | expression . '<' expression
   48           | expression . '>' expression
   49           | expression . '=' expression
   50           | expression . LE_EQ expression
   51           | expression . GR_EQ expression
   54           | expression . AND expression
   54           | expression AND expression .
   55           | expression . OR expression

    OR  shift, and go to state 53

    $default  reduce using rule 54 (expression)


State 88

   43 expression: expression . '*' expression
   44           | expression . '/' expression
   45           | expression . '+' expression
   46           | expression . '-' expression
   47           | expression . '<' expression
   48           | expression . '>' expression
   49           | expression . '=' expression
   50           | expression . LE_EQ expression
   51           | expression . GR_EQ expression
   54           | expression . AND expression
   55           | expression . OR expression
   55           | expression OR expression .

    $default  reduce using rule 55 (expression)


State 89

   43 expression: expression . '*' expression
   44           | expression . '/' expression
   45           | expression . '+' expression
   46           | expression . '-' expression
   47           | expression . '<' expression
   48           | expression . '>' expression
   49           | expression . '=' expression
   50           | expression . LE_EQ expression
   50           | expression LE_EQ expression .
   51           | expression . GR_EQ expression
   54           | expression . AND expression
   55           | expression . OR expression

    AND  shift, and go to state 52
    OR   shift, and go to state 53

    $default  reduce using rule 50 (expression)


State 90

   43 expression: expression . '*' expression
   44           | expression . '/' expression
   45           | expression . '+' expression
   46           | expression . '-' expression
   47           | expression . '<' expression
   48           | expression . '>' expression
   49           | expression . '=' expression
   50           | expression . LE_EQ expression
   51           | expression . GR_EQ expression
   51           | expression GR_EQ expression .
   54           | expression . AND expression
   55           | expression . OR expression

    AND  shift, and go to state 52
    OR   shift, and go to state 53

    $default  reduce using rule 51 (expression)


State 91

   43 expression: expression . '*' expression
   43           | expression '*' expression .
   44           | expression . '/' expression
   45           | expression . '+' expression
   46           | expression . '-' expression
   47           | expression . '<' expression
   48           | expression . '>' expression
   49           | expression . '=' expression
   50           | expression . LE_EQ expression
   51           | expression . GR_EQ expression
   54           | expression . AND expression
   55           | expression . OR expression

    AND    shift, and go to state 52
    OR     shift, and go to state 53
    LE_EQ  shift, and go to state 54
    GR_EQ  shift, and go to state 55
    '+'    shift, and go to state 58
    '-'    shift, and go to state 59
    '<'    shift, and go to state 60
    '='    shift, and go to state 61
    '>'    shift, and go to state 62

    $default  reduce using rule 43 (expression)


State 92

   43 expression: expression . '*' expression
   44           | expression . '/' expression
   44           | expression '/' expression .
   45           | expression . '+' expression
   46           | expression . '-' expression
   47           | expression . '<' expression
   48           | expression . '>' expression
   49           | expression . '=' expression
   50           | expression . LE_EQ expression
   51           | expression . GR_EQ expression
   54           | expression . AND expression
   55           | expression . OR expression

    AND    shift, and go to state 52
    OR     shift, and go to state 53
    LE_EQ  shift, and go to state 54
    GR_EQ  shift, and go to state 55
    '+'    shift, and go to state 58
    '-'    shift, and go to state 59
    '<'    shift, and go to state 60
    '='    shift, and go to state 61
    '>'    shift, and go to state 62

    $default  reduce using rule 44 (expression)


State 93

   43 expression: expression . '*' expression
   44           | expression . '/' expression
   45           | expression . '+' expression
   45           | expression '+' expression .
   46           | expression . '-' expression
   47           | expression . '<' expression
   48           | expression . '>' expression
   49           | expression . '=' expression
   50           | expression . LE_EQ expression
   51           | expression . GR_EQ expression
   54           | expression . AND expression
   55           | expression . OR expression

    AND    shift, and go to state 52
    OR     shift, and go to state 53
    LE_EQ  shift, and go to state 54
    GR_EQ  shift, and go to state 55
    '<'    shift, and go to state 60
    '='    shift, and go to state 61
    '>'    shift, and go to state 62

    $default  reduce using rule 45 (expression)


State 94

   43 expression: expression . '*' expression
   44           | expression . '/' expression
   45           | expression . '+' expression
   46           | expression . '-' expression
   46           | expression '-' expression .
   47           | expression . '<' expression
   48           | expression . '>' expression
   49           | expression . '=' expression
   50           | expression . LE_EQ expression
   51           | expression . GR_EQ expression
   54           | expression . AND expression
   55           | expression . OR expression

    AND    shift, and go to state 52
    OR     shift, and go to state 53
    LE_EQ  shift, and go to state 54
    GR_EQ  shift, and go to state 55
    '<'    shift, and go to state 60
    '='    shift, and go to state 61
    '>'    shift, and go to state 62

    $default  reduce using rule 46 (expression)


State 95

   43 expression: expression . '*' expression
   44           | expression . '/' expression
   45           | expression . '+' expression
   46           | expression . '-' expression
   47           | expression . '<' expression
   47           | expression '<' expression .
   48           | expression . '>' expression
   49           | expression . '=' expression
   50           | expression . LE_EQ expression
   51           | expression . GR_EQ expression
   54           | expression . AND expression
   55           | expression . OR expression

    AND  shift, and go to state 52
    OR   shift, and go to state 53

    $default  reduce using rule 47 (expression)


State 96

   43 expression: expression . '*' expression
   44           | expression . '/' expression
   45           | expression . '+' expression
   46           | expression . '-' expression
   47           | expression . '<' expression
   48           | expression . '>' expression
   49           | expression . '=' expression
   49           | expression '=' expression .
   50           | expression . LE_EQ expression
   51           | expression . GR_EQ expression
   54           | expression . AND expression
   55           | expression . OR expression

    AND  shift, and go to state 52
    OR   shift, and go to state 53

    $default  reduce using rule 49 (expression)


State 97

   43 expression: expression . '*' expression
   44           | expression . '/' expression
   45           | expression . '+' expression
   46           | expression . '-' expression
   47           | expression . '<' expression
   48           | expression . '>' expression
   48           | expression '>' expression .
   49           | expression . '=' expression
   50           | expression . LE_EQ expression
   51           | expression . GR_EQ expression
   54           | expression . AND expression
   55           | expression . OR expression

    AND  shift, and go to state 52
    OR   shift, and go to state 53

    $default  reduce using rule 48 (expression)


State 98

   11 variables: IDENTIFIER ':' ARRAY '[' INT_CONST . ',' INT_CONST ']' OF data_type ';'

    ','  shift, and go to state 119


State 99

   16 optional_arguments: IDENTIFIER . ':' data_type

    ':'  shift, and go to state 120


State 100

   14 optional_arg_parentheses: '(' optional_arguments . ')'
   17 optional_arguments: optional_arguments . ',' IDENTIFIER ':' data_type

    ','  shift, and go to state 121
    ')'  shift, and go to state 122


State 101

   19 opt_func_type: ':' . data_type

    BOOLEAN  shift, and go to state 36
    INTEGER  shift, and go to state 37
    REAL     shift, and go to state 38
    STRING   shift, and go to state 39

    data_type  go to state 123


State 102

    2 Procedure_dec: PROCEDURE IDENTIFIER optional_arg_parentheses opt_func_type . optional_var_con_declaration _BEGIN optional_statement END IDENTIFIER ';'

    CONST       shift, and go to state 5
    VAR         shift, and go to state 6
    IDENTIFIER  shift, and go to state 7

    $default  reduce using rule 6 (optional_var_con_declaration)

    optional_var_con_declaration  go to state 124
    constants                     go to state 9
    variables                     go to state 10


State 103

   59 conditional_statement: IF '(' . expression ')' THEN optional_statement ELSE optional_statement END ';'
   60                      | IF '(' . expression ')' THEN optional_statement END ';'

    NEQ            shift, and go to state 23
    IDENTIFIER     shift, and go to state 24
    INT_CONST      shift, and go to state 25
    REAL_CONST     shift, and go to state 26
    STR_CONST      shift, and go to state 27
    BOOLEAN_CONST  shift, and go to state 28
    '-'            shift, and go to state 29
    '~'            shift, and go to state 30
    '('            shift, and go to state 31

    const_value          go to state 32
    expression           go to state 125
    function_invocation  go to state 34


State 104

   31 statement: PRINT expression . ';'
   43 expression: expression . '*' expression
   44           | expression . '/' expression
   45           | expression . '+' expression
   46           | expression . '-' expression
   47           | expression . '<' expression
   48           | expression . '>' expression
   49           | expression . '=' expression
   50           | expression . LE_EQ expression
   51           | expression . GR_EQ expression
   54           | expression . AND expression
   55           | expression . OR expression

    AND    shift, and go to state 52
    OR     shift, and go to state 53
    LE_EQ  shift, and go to state 54
    GR_EQ  shift, and go to state 55
    '*'    shift, and go to state 56
    '/'    shift, and go to state 57
    '+'    shift, and go to state 58
    '-'    shift, and go to state 59
    '<'    shift, and go to state 60
    '='    shift, and go to state 61
    '>'    shift, and go to state 62
    ';'    shift, and go to state 126


State 105

   32 statement: PRINTLN expression . ';'
   43 expression: expression . '*' expression
   44           | expression . '/' expression
   45           | expression . '+' expression
   46           | expression . '-' expression
   47           | expression . '<' expression
   48           | expression . '>' expression
   49           | expression . '=' expression
   50           | expression . LE_EQ expression
   51           | expression . GR_EQ expression
   54           | expression . AND expression
   55           | expression . OR expression

    AND    shift, and go to state 52
    OR     shift, and go to state 53
    LE_EQ  shift, and go to state 54
    GR_EQ  shift, and go to state 55
    '*'    shift, and go to state 56
    '/'    shift, and go to state 57
    '+'    shift, and go to state 58
    '-'    shift, and go to state 59
    '<'    shift, and go to state 60
    '='    shift, and go to state 61
    '>'    shift, and go to state 62
    ';'    shift, and go to state 127


State 106

   34 statement: RETURN ';' .

    $default  reduce using rule 34 (statement)


State 107

   35 statement: RETURN expression . ';'
   43 expression: expression . '*' expression
   44           | expression . '/' expression
   45           | expression . '+' expression
   46           | expression . '-' expression
   47           | expression . '<' expression
   48           | expression . '>' expression
   49           | expression . '=' expression
   50           | expression . LE_EQ expression
   51           | expression . GR_EQ expression
   54           | expression . AND expression
   55           | expression . OR expression

    AND    shift, and go to state 52
    OR     shift, and go to state 53
    LE_EQ  shift, and go to state 54
    GR_EQ  shift, and go to state 55
    '*'    shift, and go to state 56
    '/'    shift, and go to state 57
    '+'    shift, and go to state 58
    '-'    shift, and go to state 59
    '<'    shift, and go to state 60
    '='    shift, and go to state 61
    '>'    shift, and go to state 62
    ';'    shift, and go to state 128


State 108

   61 loop_statement: WHILE '(' . expression ')' DO optional_statement END ';'

    NEQ            shift, and go to state 23
    IDENTIFIER     shift, and go to state 24
    INT_CONST      shift, and go to state 25
    REAL_CONST     shift, and go to state 26
    STR_CONST      shift, and go to state 27
    BOOLEAN_CONST  shift, and go to state 28
    '-'            shift, and go to state 29
    '~'            shift, and go to state 30
    '('            shift, and go to state 31

    const_value          go to state 32
    expression           go to state 129
    function_invocation  go to state 34


State 109

   33 statement: READ IDENTIFIER . ';'

    ';'  shift, and go to state 130


State 110

   29 statement: IDENTIFIER EQ . expression ';'

    NEQ            shift, and go to state 23
    IDENTIFIER     shift, and go to state 24
    INT_CONST      shift, and go to state 25
    REAL_CONST     shift, and go to state 26
    STR_CONST      shift, and go to state 27
    BOOLEAN_CONST  shift, and go to state 28
    '-'            shift, and go to state 29
    '~'            shift, and go to state 30
    '('            shift, and go to state 31

    const_value          go to state 32
    expression           go to state 131
    function_invocation  go to state 34


State 111

   30 statement: IDENTIFIER '[' . expression ']' EQ expression ';'
   56 expression: IDENTIFIER '[' . expression ']'

    NEQ            shift, and go to state 23
    IDENTIFIER     shift, and go to state 24
    INT_CONST      shift, and go to state 25
    REAL_CONST     shift, and go to state 26
    STR_CONST      shift, and go to state 27
    BOOLEAN_CONST  shift, and go to state 28
    '-'            shift, and go to state 29
    '~'            shift, and go to state 30
    '('            shift, and go to state 31

    const_value          go to state 32
    expression           go to state 132
    function_invocation  go to state 34


State 112

   62 optional_statement: statement optional_statement .

    $default  reduce using rule 62 (optional_statement)


State 113

   37 statement: expression ';' .

    $default  reduce using rule 37 (statement)


State 114

    1 program: MODULE IDENTIFIER optional_var_con_declaration Procedure_dec _BEGIN optional_statement END . IDENTIFIER '.'

    IDENTIFIER  shift, and go to state 133


State 115

   36 statement: function_invocation ';' .

    $default  reduce using rule 36 (statement)


State 116

   56 expression: IDENTIFIER '[' expression ']' .

    $default  reduce using rule 56 (expression)


State 117

   67 optional_comma_separated_expression: optional_comma_separated_expression ',' . expression

    NEQ            shift, and go to state 23
    IDENTIFIER     shift, and go to state 24
    INT_CONST      shift, and go to state 25
    REAL_CONST     shift, and go to state 26
    STR_CONST      shift, and go to state 27
    BOOLEAN_CONST  shift, and go to state 28
    '-'            shift, and go to state 29
    '~'            shift, and go to state 30
    '('            shift, and go to state 31

    const_value          go to state 32
    expression           go to state 134
    function_invocation  go to state 34


State 118

   65 function_invocation: IDENTIFIER '(' optional_comma_separated_expression ')' .

    $default  reduce using rule 65 (function_invocation)


State 119

   11 variables: IDENTIFIER ':' ARRAY '[' INT_CONST ',' . INT_CONST ']' OF data_type ';'

    INT_CONST  shift, and go to state 135


State 120

   16 optional_arguments: IDENTIFIER ':' . data_type

    BOOLEAN  shift, and go to state 36
    INTEGER  shift, and go to state 37
    REAL     shift, and go to state 38
    STRING   shift, and go to state 39

    data_type  go to state 136


State 121

   17 optional_arguments: optional_arguments ',' . IDENTIFIER ':' data_type

    IDENTIFIER  shift, and go to state 137


State 122

   14 optional_arg_parentheses: '(' optional_arguments ')' .

    $default  reduce using rule 14 (optional_arg_parentheses)


State 123

   19 opt_func_type: ':' data_type .

    $default  reduce using rule 19 (opt_func_type)


State 124

    2 Procedure_dec: PROCEDURE IDENTIFIER optional_arg_parentheses opt_func_type optional_var_con_declaration . _BEGIN optional_statement END IDENTIFIER ';'

    _BEGIN  shift, and go to state 138


State 125

   43 expression: expression . '*' expression
   44           | expression . '/' expression
   45           | expression . '+' expression
   46           | expression . '-' expression
   47           | expression . '<' expression
   48           | expression . '>' expression
   49           | expression . '=' expression
   50           | expression . LE_EQ expression
   51           | expression . GR_EQ expression
   54           | expression . AND expression
   55           | expression . OR expression
   59 conditional_statement: IF '(' expression . ')' THEN optional_statement ELSE optional_statement END ';'
   60                      | IF '(' expression . ')' THEN optional_statement END ';'

    AND    shift, and go to state 52
    OR     shift, and go to state 53
    LE_EQ  shift, and go to state 54
    GR_EQ  shift, and go to state 55
    '*'    shift, and go to state 56
    '/'    shift, and go to state 57
    '+'    shift, and go to state 58
    '-'    shift, and go to state 59
    '<'    shift, and go to state 60
    '='    shift, and go to state 61
    '>'    shift, and go to state 62
    ')'    shift, and go to state 139


State 126

   31 statement: PRINT expression ';' .

    $default  reduce using rule 31 (statement)


State 127

   32 statement: PRINTLN expression ';' .

    $default  reduce using rule 32 (statement)


State 128

   35 statement: RETURN expression ';' .

    $default  reduce using rule 35 (statement)


State 129

   43 expression: expression . '*' expression
   44           | expression . '/' expression
   45           | expression . '+' expression
   46           | expression . '-' expression
   47           | expression . '<' expression
   48           | expression . '>' expression
   49           | expression . '=' expression
   50           | expression . LE_EQ expression
   51           | expression . GR_EQ expression
   54           | expression . AND expression
   55           | expression . OR expression
   61 loop_statement: WHILE '(' expression . ')' DO optional_statement END ';'

    AND    shift, and go to state 52
    OR     shift, and go to state 53
    LE_EQ  shift, and go to state 54
    GR_EQ  shift, and go to state 55
    '*'    shift, and go to state 56
    '/'    shift, and go to state 57
    '+'    shift, and go to state 58
    '-'    shift, and go to state 59
    '<'    shift, and go to state 60
    '='    shift, and go to state 61
    '>'    shift, and go to state 62
    ')'    shift, and go to state 140


State 130

   33 statement: READ IDENTIFIER ';' .

    $default  reduce using rule 33 (statement)


State 131

   29 statement: IDENTIFIER EQ expression . ';'
   43 expression: expression . '*' expression
   44           | expression . '/' expression
   45           | expression . '+' expression
   46           | expression . '-' expression
   47           | expression . '<' expression
   48           | expression . '>' expression
   49           | expression . '=' expression
   50           | expression . LE_EQ expression
   51           | expression . GR_EQ expression
   54           | expression . AND expression
   55           | expression . OR expression

    AND    shift, and go to state 52
    OR     shift, and go to state 53
    LE_EQ  shift, and go to state 54
    GR_EQ  shift, and go to state 55
    '*'    shift, and go to state 56
    '/'    shift, and go to state 57
    '+'    shift, and go to state 58
    '-'    shift, and go to state 59
    '<'    shift, and go to state 60
    '='    shift, and go to state 61
    '>'    shift, and go to state 62
    ';'    shift, and go to state 141


State 132

   30 statement: IDENTIFIER '[' expression . ']' EQ expression ';'
   43 expression: expression . '*' expression
   44           | expression . '/' expression
   45           | expression . '+' expression
   46           | expression . '-' expression
   47           | expression . '<' expression
   48           | expression . '>' expression
   49           | expression . '=' expression
   50           | expression . LE_EQ expression
   51           | expression . GR_EQ expression
   54           | expression . AND expression
   55           | expression . OR expression
   56           | IDENTIFIER '[' expression . ']'

    AND    shift, and go to state 52
    OR     shift, and go to state 53
    LE_EQ  shift, and go to state 54
    GR_EQ  shift, and go to state 55
    '*'    shift, and go to state 56
    '/'    shift, and go to state 57
    '+'    shift, and go to state 58
    '-'    shift, and go to state 59
    '<'    shift, and go to state 60
    '='    shift, and go to state 61
    '>'    shift, and go to state 62
    ']'    shift, and go to state 142


State 133

    1 program: MODULE IDENTIFIER optional_var_con_declaration Procedure_dec _BEGIN optional_statement END IDENTIFIER . '.'

    '.'  shift, and go to state 143


State 134

   43 expression: expression . '*' expression
   44           | expression . '/' expression
   45           | expression . '+' expression
   46           | expression . '-' expression
   47           | expression . '<' expression
   48           | expression . '>' expression
   49           | expression . '=' expression
   50           | expression . LE_EQ expression
   51           | expression . GR_EQ expression
   54           | expression . AND expression
   55           | expression . OR expression
   67 optional_comma_separated_expression: optional_comma_separated_expression ',' expression .

    AND    shift, and go to state 52
    OR     shift, and go to state 53
    LE_EQ  shift, and go to state 54
    GR_EQ  shift, and go to state 55
    '*'    shift, and go to state 56
    '/'    shift, and go to state 57
    '+'    shift, and go to state 58
    '-'    shift, and go to state 59
    '<'    shift, and go to state 60
    '='    shift, and go to state 61
    '>'    shift, and go to state 62

    $default  reduce using rule 67 (optional_comma_separated_expression)


State 135

   11 variables: IDENTIFIER ':' ARRAY '[' INT_CONST ',' INT_CONST . ']' OF data_type ';'

    ']'  shift, and go to state 144


State 136

   16 optional_arguments: IDENTIFIER ':' data_type .

    $default  reduce using rule 16 (optional_arguments)


State 137

   17 optional_arguments: optional_arguments ',' IDENTIFIER . ':' data_type

    ':'  shift, and go to state 145


State 138

    2 Procedure_dec: PROCEDURE IDENTIFIER optional_arg_parentheses opt_func_type optional_var_con_declaration _BEGIN . optional_statement END IDENTIFIER ';'

    NEQ            shift, and go to state 23
    IF             shift, and go to state 68
    PRINT          shift, and go to state 69
    PRINTLN        shift, and go to state 70
    RETURN         shift, and go to state 71
    WHILE          shift, and go to state 72
    READ           shift, and go to state 73
    IDENTIFIER     shift, and go to state 74
    INT_CONST      shift, and go to state 25
    REAL_CONST     shift, and go to state 26
    STR_CONST      shift, and go to state 27
    BOOLEAN_CONST  shift, and go to state 28
    '-'            shift, and go to state 29
    '~'            shift, and go to state 30
    '('            shift, and go to state 31

    $default  reduce using rule 64 (optional_statement)

    const_value            go to state 32
    statement              go to state 75
    expression             go to state 76
    conditional_statement  go to state 77
    loop_statement         go to state 78
    optional_statement     go to state 146
    function_invocation    go to state 80


State 139

   59 conditional_statement: IF '(' expression ')' . THEN optional_statement ELSE optional_statement END ';'
   60                      | IF '(' expression ')' . THEN optional_statement END ';'

    THEN  shift, and go to state 147


State 140

   61 loop_statement: WHILE '(' expression ')' . DO optional_statement END ';'

    DO  shift, and go to state 148


State 141

   29 statement: IDENTIFIER EQ expression ';' .

    $default  reduce using rule 29 (statement)


State 142

   30 statement: IDENTIFIER '[' expression ']' . EQ expression ';'
   56 expression: IDENTIFIER '[' expression ']' .

    EQ  shift, and go to state 149

    $default  reduce using rule 56 (expression)


State 143

    1 program: MODULE IDENTIFIER optional_var_con_declaration Procedure_dec _BEGIN optional_statement END IDENTIFIER '.' .

    $default  reduce using rule 1 (program)


State 144

   11 variables: IDENTIFIER ':' ARRAY '[' INT_CONST ',' INT_CONST ']' . OF data_type ';'

    OF  shift, and go to state 150


State 145

   17 optional_arguments: optional_arguments ',' IDENTIFIER ':' . data_type

    BOOLEAN  shift, and go to state 36
    INTEGER  shift, and go to state 37
    REAL     shift, and go to state 38
    STRING   shift, and go to state 39

    data_type  go to state 151


State 146

    2 Procedure_dec: PROCEDURE IDENTIFIER optional_arg_parentheses opt_func_type optional_var_con_declaration _BEGIN optional_statement . END IDENTIFIER ';'

    END  shift, and go to state 152


State 147

   59 conditional_statement: IF '(' expression ')' THEN . optional_statement ELSE optional_statement END ';'
   60                      | IF '(' expression ')' THEN . optional_statement END ';'

    NEQ            shift, and go to state 23
    IF             shift, and go to state 68
    PRINT          shift, and go to state 69
    PRINTLN        shift, and go to state 70
    RETURN         shift, and go to state 71
    WHILE          shift, and go to state 72
    READ           shift, and go to state 73
    IDENTIFIER     shift, and go to state 74
    INT_CONST      shift, and go to state 25
    REAL_CONST     shift, and go to state 26
    STR_CONST      shift, and go to state 27
    BOOLEAN_CONST  shift, and go to state 28
    '-'            shift, and go to state 29
    '~'            shift, and go to state 30
    '('            shift, and go to state 31

    $default  reduce using rule 64 (optional_statement)

    const_value            go to state 32
    statement              go to state 75
    expression             go to state 76
    conditional_statement  go to state 77
    loop_statement         go to state 78
    optional_statement     go to state 153
    function_invocation    go to state 80


State 148

   61 loop_statement: WHILE '(' expression ')' DO . optional_statement END ';'

    NEQ            shift, and go to state 23
    IF             shift, and go to state 68
    PRINT          shift, and go to state 69
    PRINTLN        shift, and go to state 70
    RETURN         shift, and go to state 71
    WHILE          shift, and go to state 72
    READ           shift, and go to state 73
    IDENTIFIER     shift, and go to state 74
    INT_CONST      shift, and go to state 25
    REAL_CONST     shift, and go to state 26
    STR_CONST      shift, and go to state 27
    BOOLEAN_CONST  shift, and go to state 28
    '-'            shift, and go to state 29
    '~'            shift, and go to state 30
    '('            shift, and go to state 31

    $default  reduce using rule 64 (optional_statement)

    const_value            go to state 32
    statement              go to state 75
    expression             go to state 76
    conditional_statement  go to state 77
    loop_statement         go to state 78
    optional_statement     go to state 154
    function_invocation    go to state 80


State 149

   30 statement: IDENTIFIER '[' expression ']' EQ . expression ';'

    NEQ            shift, and go to state 23
    IDENTIFIER     shift, and go to state 24
    INT_CONST      shift, and go to state 25
    REAL_CONST     shift, and go to state 26
    STR_CONST      shift, and go to state 27
    BOOLEAN_CONST  shift, and go to state 28
    '-'            shift, and go to state 29
    '~'            shift, and go to state 30
    '('            shift, and go to state 31

    const_value          go to state 32
    expression           go to state 155
    function_invocation  go to state 34


State 150

   11 variables: IDENTIFIER ':' ARRAY '[' INT_CONST ',' INT_CONST ']' OF . data_type ';'

    BOOLEAN  shift, and go to state 36
    INTEGER  shift, and go to state 37
    REAL     shift, and go to state 38
    STRING   shift, and go to state 39

    data_type  go to state 156


State 151

   17 optional_arguments: optional_arguments ',' IDENTIFIER ':' data_type .

    $default  reduce using rule 17 (optional_arguments)


State 152

    2 Procedure_dec: PROCEDURE IDENTIFIER optional_arg_parentheses opt_func_type optional_var_con_declaration _BEGIN optional_statement END . IDENTIFIER ';'

    IDENTIFIER  shift, and go to state 157


State 153

   59 conditional_statement: IF '(' expression ')' THEN optional_statement . ELSE optional_statement END ';'
   60                      | IF '(' expression ')' THEN optional_statement . END ';'

    ELSE  shift, and go to state 158
    END   shift, and go to state 159


State 154

   61 loop_statement: WHILE '(' expression ')' DO optional_statement . END ';'

    END  shift, and go to state 160


State 155

   30 statement: IDENTIFIER '[' expression ']' EQ expression . ';'
   43 expression: expression . '*' expression
   44           | expression . '/' expression
   45           | expression . '+' expression
   46           | expression . '-' expression
   47           | expression . '<' expression
   48           | expression . '>' expression
   49           | expression . '=' expression
   50           | expression . LE_EQ expression
   51           | expression . GR_EQ expression
   54           | expression . AND expression
   55           | expression . OR expression

    AND    shift, and go to state 52
    OR     shift, and go to state 53
    LE_EQ  shift, and go to state 54
    GR_EQ  shift, and go to state 55
    '*'    shift, and go to state 56
    '/'    shift, and go to state 57
    '+'    shift, and go to state 58
    '-'    shift, and go to state 59
    '<'    shift, and go to state 60
    '='    shift, and go to state 61
    '>'    shift, and go to state 62
    ';'    shift, and go to state 161


State 156

   11 variables: IDENTIFIER ':' ARRAY '[' INT_CONST ',' INT_CONST ']' OF data_type . ';'

    ';'  shift, and go to state 162


State 157

    2 Procedure_dec: PROCEDURE IDENTIFIER optional_arg_parentheses opt_func_type optional_var_con_declaration _BEGIN optional_statement END IDENTIFIER . ';'

    ';'  shift, and go to state 163


State 158

   59 conditional_statement: IF '(' expression ')' THEN optional_statement ELSE . optional_statement END ';'

    NEQ            shift, and go to state 23
    IF             shift, and go to state 68
    PRINT          shift, and go to state 69
    PRINTLN        shift, and go to state 70
    RETURN         shift, and go to state 71
    WHILE          shift, and go to state 72
    READ           shift, and go to state 73
    IDENTIFIER     shift, and go to state 74
    INT_CONST      shift, and go to state 25
    REAL_CONST     shift, and go to state 26
    STR_CONST      shift, and go to state 27
    BOOLEAN_CONST  shift, and go to state 28
    '-'            shift, and go to state 29
    '~'            shift, and go to state 30
    '('            shift, and go to state 31

    $default  reduce using rule 64 (optional_statement)

    const_value            go to state 32
    statement              go to state 75
    expression             go to state 76
    conditional_statement  go to state 77
    loop_statement         go to state 78
    optional_statement     go to state 164
    function_invocation    go to state 80


State 159

   60 conditional_statement: IF '(' expression ')' THEN optional_statement END . ';'

    ';'  shift, and go to state 165


State 160

   61 loop_statement: WHILE '(' expression ')' DO optional_statement END . ';'

    ';'  shift, and go to state 166


State 161

   30 statement: IDENTIFIER '[' expression ']' EQ expression ';' .

    $default  reduce using rule 30 (statement)


State 162

   11 variables: IDENTIFIER ':' ARRAY '[' INT_CONST ',' INT_CONST ']' OF data_type ';' .

    $default  reduce using rule 11 (variables)


State 163

    2 Procedure_dec: PROCEDURE IDENTIFIER optional_arg_parentheses opt_func_type optional_var_con_declaration _BEGIN optional_statement END IDENTIFIER ';' .

    $default  reduce using rule 2 (Procedure_dec)


State 164

   59 conditional_statement: IF '(' expression ')' THEN optional_statement ELSE optional_statement . END ';'

    END  shift, and go to state 167


State 165

   60 conditional_statement: IF '(' expression ')' THEN optional_statement END ';' .

    $default  reduce using rule 60 (conditional_statement)


State 166

   61 loop_statement: WHILE '(' expression ')' DO optional_statement END ';' .

    $default  reduce using rule 61 (loop_statement)


State 167

   59 conditional_statement: IF '(' expression ')' THEN optional_statement ELSE optional_statement END . ';'

    ';'  shift, and go to state 168


State 168

   59 conditional_statement: IF '(' expression ')' THEN optional_statement ELSE optional_statement END ';' .

    $default  reduce using rule 59 (conditional_statement)
