Terminals unused in grammar

   BREAK
   CHAR
   CASE
   CONTINUE
   EXIT
   FALSE
   FOR
   FN
   IN
   LOOP
   REPEAT
   RECORD
   TURE
   TYPE
   USE
   UTIL


State 13 conflicts: 1 shift/reduce
State 110 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: MODULE IDENTIFIERS optional_var_con_declaration Procedure_dec BEGIN optional_statement END IDENTIFIERS '.'

    2 Procedure_dec: PROCEDURE IDENTIFIERS optional_arg_parentheses opt_func_type optional_var_con_declaration BEGIN optional_statement END IDENTIFIERS ';'

    3 optional_var_con_declaration: constants optional_var_con_declaration
    4                             | variables optional_var_con_declaration
    5                             | %empty

    6 constants: CONST IDENTIFIERS '=' expression ';' optional_con_exp

    7 optional_con_exp: optional_con_exp IDENTIFIERS '=' expression ';'
    8                 | %empty

    9 variables: VAR optional_var_exp
   10          | IDENTIFIERS ':' ARRAY '[' INT_CONST ',' INT_CONST ']' OF data_type ';'

   11 optional_var_exp: IDENTIFIERS ':' data_type ';'
   12                 | optional_var_exp IDENTIFIERS ':' data_type ';'

   13 optional_arg_parentheses: '(' optional_arguments ')'
   14                         | %empty

   15 optional_arguments: IDENTIFIERS ':' data_type
   16                   | optional_arguments ',' IDENTIFIERS ':' data_type
   17                   | %empty

   18 opt_func_type: ':' data_type
   19              | %empty

   20 data_type: STRING
   21          | INTEGER
   22          | BOOLEAN
   23          | REAL

   24 const_value: INT_CONST
   25            | BOOL_CONST
   26            | REAL_CONST
   27            | STR_CONST

   28 statement: IDENTIFIERS EQ expression ';'
   29          | IDENTIFIERS '[' expression ']' EQ expression ';'
   30          | PRINT expression ';'
   31          | PRINTLN expression ';'
   32          | READ IDENTIFIERS ';'
   33          | RETURN ';'
   34          | RETURN expression ';'
   35          | function_invocation ';'
   36          | conditional_statement
   37          | loop_statement

   38 expression: IDENTIFIERS
   39           | const_value
   40           | function_invocation
   41           | expression '*' expression
   42           | expression '/' expression
   43           | expression '+' expression
   44           | expression '-' expression
   45           | expression '<' expression
   46           | expression '>' expression
   47           | expression '=' expression
   48           | expression LE_EQ expression
   49           | expression GR_EQ expression
   50           | NEQ expression
   51           | '~' expression
   52           | expression AND expression
   53           | expression OR expression
   54           | IDENTIFIERS '[' expression ']'
   55           | '(' expression ')'
   56           | '-' expression

   57 conditional_statement: IF '(' expression ')' THEN optional_statement ELSE optional_statement END ';'
   58                      | IF '(' expression ')' THEN optional_statement END ';'

   59 loop_statement: WHILE '(' expression ')' DO optional_statement END ';'

   60 optional_statement: statement optional_statement
   61                   | statement

   62 function_invocation: IDENTIFIERS '(' optional_comma_separated_expression ')'

   63 optional_comma_separated_expression: expression
   64                                    | optional_comma_separated_expression ',' expression


Terminals, with rules where they appear

$end (0) 0
'(' (40) 13 55 57 58 59 62
')' (41) 13 55 57 58 59 62
'*' (42) 41
'+' (43) 43
',' (44) 10 16 64
'-' (45) 44 56
'.' (46) 1
'/' (47) 42
':' (58) 10 11 12 15 16 18
';' (59) 2 6 7 10 11 12 28 29 30 31 32 33 34 35 57 58 59
'<' (60) 45
'=' (61) 6 7 47
'>' (62) 46
'[' (91) 10 29 54
']' (93) 10 29 54
'~' (126) 51
error (256)
AND (258) 52
OR (259) 53
EQ (260) 28 29
LE_EQ (261) 48
GR_EQ (262) 49
NEQ (263) 50
ARRAY (264) 10
BOOLEAN (265) 22
BEGIN (266) 1 2
BREAK (267)
CHAR (268)
CASE (269)
CONST (270) 6
CONTINUE (271)
DO (272) 59
ELSE (273) 57
END (274) 1 2 57 58 59
EXIT (275)
FALSE (276)
FOR (277)
FN (278)
IF (279) 57 58
IN (280)
INTEGER (281) 21
LOOP (282)
MODULE (283) 1
PRINT (284) 30
PRINTLN (285) 31
PROCEDURE (286) 2
REPEAT (287)
RETURN (288) 33 34
REAL (289) 23
STRING (290) 20
RECORD (291)
THEN (292) 57 58
TURE (293)
TYPE (294)
USE (295)
UTIL (296)
VAR (297) 9
WHILE (298) 59
OF (299) 10
READ (300) 32
IDENTIFIERS (301) 1 2 6 7 10 11 12 15 16 28 29 32 38 54 62
INT_CONST (302) 10 24
REAL_CONST (303) 26
STR_CONST (304) 27
BOOL_CONST (305) 25
UMINUS (306)


Nonterminals, with rules where they appear

$accept (68)
    on left: 0
program (69)
    on left: 1, on right: 0
Procedure_dec (70)
    on left: 2, on right: 1
optional_var_con_declaration (71)
    on left: 3 4 5, on right: 1 2 3 4
constants (72)
    on left: 6, on right: 3
optional_con_exp (73)
    on left: 7 8, on right: 6 7
variables (74)
    on left: 9 10, on right: 4
optional_var_exp (75)
    on left: 11 12, on right: 9 12
optional_arg_parentheses (76)
    on left: 13 14, on right: 2
optional_arguments (77)
    on left: 15 16 17, on right: 13 16
opt_func_type (78)
    on left: 18 19, on right: 2
data_type (79)
    on left: 20 21 22 23, on right: 10 11 12 15 16 18
const_value (80)
    on left: 24 25 26 27, on right: 39
statement (81)
    on left: 28 29 30 31 32 33 34 35 36 37, on right: 60 61
expression (82)
    on left: 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55
    56, on right: 6 7 28 29 30 31 34 41 42 43 44 45 46 47 48 49 50
    51 52 53 54 55 56 57 58 59 63 64
conditional_statement (83)
    on left: 57 58, on right: 36
loop_statement (84)
    on left: 59, on right: 37
optional_statement (85)
    on left: 60 61, on right: 1 2 57 58 59 60
function_invocation (86)
    on left: 62, on right: 35 40
optional_comma_separated_expression (87)
    on left: 63 64, on right: 62 64


State 0

    0 $accept: . program $end

    MODULE  shift, and go to state 1

    program  go to state 2


State 1

    1 program: MODULE . IDENTIFIERS optional_var_con_declaration Procedure_dec BEGIN optional_statement END IDENTIFIERS '.'

    IDENTIFIERS  shift, and go to state 3


State 2

    0 $accept: program . $end

    $end  shift, and go to state 4


State 3

    1 program: MODULE IDENTIFIERS . optional_var_con_declaration Procedure_dec BEGIN optional_statement END IDENTIFIERS '.'

    CONST       shift, and go to state 5
    VAR         shift, and go to state 6
    IDENTIFIERS  shift, and go to state 7

    $default  reduce using rule 5 (optional_var_con_declaration)

    optional_var_con_declaration  go to state 8
    constants                     go to state 9
    variables                     go to state 10


State 4

    0 $accept: program $end .

    $default  accept


State 5

    6 constants: CONST . IDENTIFIERS '=' expression ';' optional_con_exp

    IDENTIFIERS  shift, and go to state 11


State 6

    9 variables: VAR . optional_var_exp

    IDENTIFIERS  shift, and go to state 12

    optional_var_exp  go to state 13


State 7

   10 variables: IDENTIFIERS . ':' ARRAY '[' INT_CONST ',' INT_CONST ']' OF data_type ';'

    ':'  shift, and go to state 14


State 8

    1 program: MODULE IDENTIFIERS optional_var_con_declaration . Procedure_dec BEGIN optional_statement END IDENTIFIERS '.'

    PROCEDURE  shift, and go to state 15

    Procedure_dec  go to state 16


State 9

    3 optional_var_con_declaration: constants . optional_var_con_declaration

    CONST       shift, and go to state 5
    VAR         shift, and go to state 6
    IDENTIFIERS  shift, and go to state 7

    $default  reduce using rule 5 (optional_var_con_declaration)

    optional_var_con_declaration  go to state 17
    constants                     go to state 9
    variables                     go to state 10


State 10

    4 optional_var_con_declaration: variables . optional_var_con_declaration

    CONST       shift, and go to state 5
    VAR         shift, and go to state 6
    IDENTIFIERS  shift, and go to state 7

    $default  reduce using rule 5 (optional_var_con_declaration)

    optional_var_con_declaration  go to state 18
    constants                     go to state 9
    variables                     go to state 10


State 11

    6 constants: CONST IDENTIFIERS . '=' expression ';' optional_con_exp

    '='  shift, and go to state 19


State 12

   11 optional_var_exp: IDENTIFIERS . ':' data_type ';'

    ':'  shift, and go to state 20


State 13

    9 variables: VAR optional_var_exp .
   12 optional_var_exp: optional_var_exp . IDENTIFIERS ':' data_type ';'

    IDENTIFIERS  shift, and go to state 21

    IDENTIFIERS  [reduce using rule 9 (variables)]
    $default    reduce using rule 9 (variables)


State 14

   10 variables: IDENTIFIERS ':' . ARRAY '[' INT_CONST ',' INT_CONST ']' OF data_type ';'

    ARRAY  shift, and go to state 22


State 15

    2 Procedure_dec: PROCEDURE . IDENTIFIERS optional_arg_parentheses opt_func_type optional_var_con_declaration BEGIN optional_statement END IDENTIFIERS ';'

    IDENTIFIERS  shift, and go to state 23


State 16

    1 program: MODULE IDENTIFIERS optional_var_con_declaration Procedure_dec . BEGIN optional_statement END IDENTIFIERS '.'

    BEGIN  shift, and go to state 24


State 17

    3 optional_var_con_declaration: constants optional_var_con_declaration .

    $default  reduce using rule 3 (optional_var_con_declaration)


State 18

    4 optional_var_con_declaration: variables optional_var_con_declaration .

    $default  reduce using rule 4 (optional_var_con_declaration)


State 19

    6 constants: CONST IDENTIFIERS '=' . expression ';' optional_con_exp

    NEQ         shift, and go to state 25
    IDENTIFIERS  shift, and go to state 26
    INT_CONST   shift, and go to state 27
    REAL_CONST  shift, and go to state 28
    STR_CONST   shift, and go to state 29
    BOOL_CONST  shift, and go to state 30
    '-'         shift, and go to state 31
    '~'         shift, and go to state 32
    '('         shift, and go to state 33

    const_value          go to state 34
    expression           go to state 35
    function_invocation  go to state 36


State 20

   11 optional_var_exp: IDENTIFIERS ':' . data_type ';'

    BOOLEAN  shift, and go to state 37
    INTEGER  shift, and go to state 38
    REAL     shift, and go to state 39
    STRING   shift, and go to state 40

    data_type  go to state 41


State 21

   12 optional_var_exp: optional_var_exp IDENTIFIERS . ':' data_type ';'

    ':'  shift, and go to state 42


State 22

   10 variables: IDENTIFIERS ':' ARRAY . '[' INT_CONST ',' INT_CONST ']' OF data_type ';'

    '['  shift, and go to state 43


State 23

    2 Procedure_dec: PROCEDURE IDENTIFIERS . optional_arg_parentheses opt_func_type optional_var_con_declaration BEGIN optional_statement END IDENTIFIERS ';'

    '('  shift, and go to state 44

    $default  reduce using rule 14 (optional_arg_parentheses)

    optional_arg_parentheses  go to state 45


State 24

    1 program: MODULE IDENTIFIERS optional_var_con_declaration Procedure_dec BEGIN . optional_statement END IDENTIFIERS '.'

    IF          shift, and go to state 46
    PRINT       shift, and go to state 47
    PRINTLN     shift, and go to state 48
    RETURN      shift, and go to state 49
    WHILE       shift, and go to state 50
    READ        shift, and go to state 51
    IDENTIFIERS  shift, and go to state 52

    statement              go to state 53
    conditional_statement  go to state 54
    loop_statement         go to state 55
    optional_statement     go to state 56
    function_invocation    go to state 57


State 25

   50 expression: NEQ . expression

    NEQ         shift, and go to state 25
    IDENTIFIERS  shift, and go to state 26
    INT_CONST   shift, and go to state 27
    REAL_CONST  shift, and go to state 28
    STR_CONST   shift, and go to state 29
    BOOL_CONST  shift, and go to state 30
    '-'         shift, and go to state 31
    '~'         shift, and go to state 32
    '('         shift, and go to state 33

    const_value          go to state 34
    expression           go to state 58
    function_invocation  go to state 36


State 26

   38 expression: IDENTIFIERS .
   54           | IDENTIFIERS . '[' expression ']'
   62 function_invocation: IDENTIFIERS . '(' optional_comma_separated_expression ')'

    '['  shift, and go to state 59
    '('  shift, and go to state 60

    $default  reduce using rule 38 (expression)


State 27

   24 const_value: INT_CONST .

    $default  reduce using rule 24 (const_value)


State 28

   26 const_value: REAL_CONST .

    $default  reduce using rule 26 (const_value)


State 29

   27 const_value: STR_CONST .

    $default  reduce using rule 27 (const_value)


State 30

   25 const_value: BOOL_CONST .

    $default  reduce using rule 25 (const_value)


State 31

   56 expression: '-' . expression

    NEQ         shift, and go to state 25
    IDENTIFIERS  shift, and go to state 26
    INT_CONST   shift, and go to state 27
    REAL_CONST  shift, and go to state 28
    STR_CONST   shift, and go to state 29
    BOOL_CONST  shift, and go to state 30
    '-'         shift, and go to state 31
    '~'         shift, and go to state 32
    '('         shift, and go to state 33

    const_value          go to state 34
    expression           go to state 61
    function_invocation  go to state 36


State 32

   51 expression: '~' . expression

    NEQ         shift, and go to state 25
    IDENTIFIERS  shift, and go to state 26
    INT_CONST   shift, and go to state 27
    REAL_CONST  shift, and go to state 28
    STR_CONST   shift, and go to state 29
    BOOL_CONST  shift, and go to state 30
    '-'         shift, and go to state 31
    '~'         shift, and go to state 32
    '('         shift, and go to state 33

    const_value          go to state 34
    expression           go to state 62
    function_invocation  go to state 36


State 33

   55 expression: '(' . expression ')'

    NEQ         shift, and go to state 25
    IDENTIFIERS  shift, and go to state 26
    INT_CONST   shift, and go to state 27
    REAL_CONST  shift, and go to state 28
    STR_CONST   shift, and go to state 29
    BOOL_CONST  shift, and go to state 30
    '-'         shift, and go to state 31
    '~'         shift, and go to state 32
    '('         shift, and go to state 33

    const_value          go to state 34
    expression           go to state 63
    function_invocation  go to state 36


State 34

   39 expression: const_value .

    $default  reduce using rule 39 (expression)


State 35

    6 constants: CONST IDENTIFIERS '=' expression . ';' optional_con_exp
   41 expression: expression . '*' expression
   42           | expression . '/' expression
   43           | expression . '+' expression
   44           | expression . '-' expression
   45           | expression . '<' expression
   46           | expression . '>' expression
   47           | expression . '=' expression
   48           | expression . LE_EQ expression
   49           | expression . GR_EQ expression
   52           | expression . AND expression
   53           | expression . OR expression

    AND    shift, and go to state 64
    OR     shift, and go to state 65
    LE_EQ  shift, and go to state 66
    GR_EQ  shift, and go to state 67
    '*'    shift, and go to state 68
    '/'    shift, and go to state 69
    '+'    shift, and go to state 70
    '-'    shift, and go to state 71
    '<'    shift, and go to state 72
    '='    shift, and go to state 73
    '>'    shift, and go to state 74
    ';'    shift, and go to state 75


State 36

   40 expression: function_invocation .

    $default  reduce using rule 40 (expression)


State 37

   22 data_type: BOOLEAN .

    $default  reduce using rule 22 (data_type)


State 38

   21 data_type: INTEGER .

    $default  reduce using rule 21 (data_type)


State 39

   23 data_type: REAL .

    $default  reduce using rule 23 (data_type)


State 40

   20 data_type: STRING .

    $default  reduce using rule 20 (data_type)


State 41

   11 optional_var_exp: IDENTIFIERS ':' data_type . ';'

    ';'  shift, and go to state 76


State 42

   12 optional_var_exp: optional_var_exp IDENTIFIERS ':' . data_type ';'

    BOOLEAN  shift, and go to state 37
    INTEGER  shift, and go to state 38
    REAL     shift, and go to state 39
    STRING   shift, and go to state 40

    data_type  go to state 77


State 43

   10 variables: IDENTIFIERS ':' ARRAY '[' . INT_CONST ',' INT_CONST ']' OF data_type ';'

    INT_CONST  shift, and go to state 78


State 44

   13 optional_arg_parentheses: '(' . optional_arguments ')'

    IDENTIFIERS  shift, and go to state 79

    $default  reduce using rule 17 (optional_arguments)

    optional_arguments  go to state 80


State 45

    2 Procedure_dec: PROCEDURE IDENTIFIERS optional_arg_parentheses . opt_func_type optional_var_con_declaration BEGIN optional_statement END IDENTIFIERS ';'

    ':'  shift, and go to state 81

    $default  reduce using rule 19 (opt_func_type)

    opt_func_type  go to state 82


State 46

   57 conditional_statement: IF . '(' expression ')' THEN optional_statement ELSE optional_statement END ';'
   58                      | IF . '(' expression ')' THEN optional_statement END ';'

    '('  shift, and go to state 83


State 47

   30 statement: PRINT . expression ';'

    NEQ         shift, and go to state 25
    IDENTIFIERS  shift, and go to state 26
    INT_CONST   shift, and go to state 27
    REAL_CONST  shift, and go to state 28
    STR_CONST   shift, and go to state 29
    BOOL_CONST  shift, and go to state 30
    '-'         shift, and go to state 31
    '~'         shift, and go to state 32
    '('         shift, and go to state 33

    const_value          go to state 34
    expression           go to state 84
    function_invocation  go to state 36


State 48

   31 statement: PRINTLN . expression ';'

    NEQ         shift, and go to state 25
    IDENTIFIERS  shift, and go to state 26
    INT_CONST   shift, and go to state 27
    REAL_CONST  shift, and go to state 28
    STR_CONST   shift, and go to state 29
    BOOL_CONST  shift, and go to state 30
    '-'         shift, and go to state 31
    '~'         shift, and go to state 32
    '('         shift, and go to state 33

    const_value          go to state 34
    expression           go to state 85
    function_invocation  go to state 36


State 49

   33 statement: RETURN . ';'
   34          | RETURN . expression ';'

    NEQ         shift, and go to state 25
    IDENTIFIERS  shift, and go to state 26
    INT_CONST   shift, and go to state 27
    REAL_CONST  shift, and go to state 28
    STR_CONST   shift, and go to state 29
    BOOL_CONST  shift, and go to state 30
    '-'         shift, and go to state 31
    '~'         shift, and go to state 32
    ';'         shift, and go to state 86
    '('         shift, and go to state 33

    const_value          go to state 34
    expression           go to state 87
    function_invocation  go to state 36


State 50

   59 loop_statement: WHILE . '(' expression ')' DO optional_statement END ';'

    '('  shift, and go to state 88


State 51

   32 statement: READ . IDENTIFIERS ';'

    IDENTIFIERS  shift, and go to state 89


State 52

   28 statement: IDENTIFIERS . EQ expression ';'
   29          | IDENTIFIERS . '[' expression ']' EQ expression ';'
   62 function_invocation: IDENTIFIERS . '(' optional_comma_separated_expression ')'

    EQ   shift, and go to state 90
    '['  shift, and go to state 91
    '('  shift, and go to state 60


State 53

   60 optional_statement: statement . optional_statement
   61                   | statement .

    IF          shift, and go to state 46
    PRINT       shift, and go to state 47
    PRINTLN     shift, and go to state 48
    RETURN      shift, and go to state 49
    WHILE       shift, and go to state 50
    READ        shift, and go to state 51
    IDENTIFIERS  shift, and go to state 52

    $default  reduce using rule 61 (optional_statement)

    statement              go to state 53
    conditional_statement  go to state 54
    loop_statement         go to state 55
    optional_statement     go to state 92
    function_invocation    go to state 57


State 54

   36 statement: conditional_statement .

    $default  reduce using rule 36 (statement)


State 55

   37 statement: loop_statement .

    $default  reduce using rule 37 (statement)


State 56

    1 program: MODULE IDENTIFIERS optional_var_con_declaration Procedure_dec BEGIN optional_statement . END IDENTIFIERS '.'

    END  shift, and go to state 93


State 57

   35 statement: function_invocation . ';'

    ';'  shift, and go to state 94


State 58

   41 expression: expression . '*' expression
   42           | expression . '/' expression
   43           | expression . '+' expression
   44           | expression . '-' expression
   45           | expression . '<' expression
   46           | expression . '>' expression
   47           | expression . '=' expression
   48           | expression . LE_EQ expression
   49           | expression . GR_EQ expression
   50           | NEQ expression .
   52           | expression . AND expression
   53           | expression . OR expression

    AND  shift, and go to state 64
    OR   shift, and go to state 65

    $default  reduce using rule 50 (expression)


State 59

   54 expression: IDENTIFIERS '[' . expression ']'

    NEQ         shift, and go to state 25
    IDENTIFIERS  shift, and go to state 26
    INT_CONST   shift, and go to state 27
    REAL_CONST  shift, and go to state 28
    STR_CONST   shift, and go to state 29
    BOOL_CONST  shift, and go to state 30
    '-'         shift, and go to state 31
    '~'         shift, and go to state 32
    '('         shift, and go to state 33

    const_value          go to state 34
    expression           go to state 95
    function_invocation  go to state 36


State 60

   62 function_invocation: IDENTIFIERS '(' . optional_comma_separated_expression ')'

    NEQ         shift, and go to state 25
    IDENTIFIERS  shift, and go to state 26
    INT_CONST   shift, and go to state 27
    REAL_CONST  shift, and go to state 28
    STR_CONST   shift, and go to state 29
    BOOL_CONST  shift, and go to state 30
    '-'         shift, and go to state 31
    '~'         shift, and go to state 32
    '('         shift, and go to state 33

    const_value                          go to state 34
    expression                           go to state 96
    function_invocation                  go to state 36
    optional_comma_separated_expression  go to state 97


State 61

   41 expression: expression . '*' expression
   42           | expression . '/' expression
   43           | expression . '+' expression
   44           | expression . '-' expression
   45           | expression . '<' expression
   46           | expression . '>' expression
   47           | expression . '=' expression
   48           | expression . LE_EQ expression
   49           | expression . GR_EQ expression
   52           | expression . AND expression
   53           | expression . OR expression
   56           | '-' expression .

    $default  reduce using rule 56 (expression)


State 62

   41 expression: expression . '*' expression
   42           | expression . '/' expression
   43           | expression . '+' expression
   44           | expression . '-' expression
   45           | expression . '<' expression
   46           | expression . '>' expression
   47           | expression . '=' expression
   48           | expression . LE_EQ expression
   49           | expression . GR_EQ expression
   51           | '~' expression .
   52           | expression . AND expression
   53           | expression . OR expression

    AND  shift, and go to state 64
    OR   shift, and go to state 65

    $default  reduce using rule 51 (expression)


State 63

   41 expression: expression . '*' expression
   42           | expression . '/' expression
   43           | expression . '+' expression
   44           | expression . '-' expression
   45           | expression . '<' expression
   46           | expression . '>' expression
   47           | expression . '=' expression
   48           | expression . LE_EQ expression
   49           | expression . GR_EQ expression
   52           | expression . AND expression
   53           | expression . OR expression
   55           | '(' expression . ')'

    AND    shift, and go to state 64
    OR     shift, and go to state 65
    LE_EQ  shift, and go to state 66
    GR_EQ  shift, and go to state 67
    '*'    shift, and go to state 68
    '/'    shift, and go to state 69
    '+'    shift, and go to state 70
    '-'    shift, and go to state 71
    '<'    shift, and go to state 72
    '='    shift, and go to state 73
    '>'    shift, and go to state 74
    ')'    shift, and go to state 98


State 64

   52 expression: expression AND . expression

    NEQ         shift, and go to state 25
    IDENTIFIERS  shift, and go to state 26
    INT_CONST   shift, and go to state 27
    REAL_CONST  shift, and go to state 28
    STR_CONST   shift, and go to state 29
    BOOL_CONST  shift, and go to state 30
    '-'         shift, and go to state 31
    '~'         shift, and go to state 32
    '('         shift, and go to state 33

    const_value          go to state 34
    expression           go to state 99
    function_invocation  go to state 36


State 65

   53 expression: expression OR . expression

    NEQ         shift, and go to state 25
    IDENTIFIERS  shift, and go to state 26
    INT_CONST   shift, and go to state 27
    REAL_CONST  shift, and go to state 28
    STR_CONST   shift, and go to state 29
    BOOL_CONST  shift, and go to state 30
    '-'         shift, and go to state 31
    '~'         shift, and go to state 32
    '('         shift, and go to state 33

    const_value          go to state 34
    expression           go to state 100
    function_invocation  go to state 36


State 66

   48 expression: expression LE_EQ . expression

    NEQ         shift, and go to state 25
    IDENTIFIERS  shift, and go to state 26
    INT_CONST   shift, and go to state 27
    REAL_CONST  shift, and go to state 28
    STR_CONST   shift, and go to state 29
    BOOL_CONST  shift, and go to state 30
    '-'         shift, and go to state 31
    '~'         shift, and go to state 32
    '('         shift, and go to state 33

    const_value          go to state 34
    expression           go to state 101
    function_invocation  go to state 36


State 67

   49 expression: expression GR_EQ . expression

    NEQ         shift, and go to state 25
    IDENTIFIERS  shift, and go to state 26
    INT_CONST   shift, and go to state 27
    REAL_CONST  shift, and go to state 28
    STR_CONST   shift, and go to state 29
    BOOL_CONST  shift, and go to state 30
    '-'         shift, and go to state 31
    '~'         shift, and go to state 32
    '('         shift, and go to state 33

    const_value          go to state 34
    expression           go to state 102
    function_invocation  go to state 36


State 68

   41 expression: expression '*' . expression

    NEQ         shift, and go to state 25
    IDENTIFIERS  shift, and go to state 26
    INT_CONST   shift, and go to state 27
    REAL_CONST  shift, and go to state 28
    STR_CONST   shift, and go to state 29
    BOOL_CONST  shift, and go to state 30
    '-'         shift, and go to state 31
    '~'         shift, and go to state 32
    '('         shift, and go to state 33

    const_value          go to state 34
    expression           go to state 103
    function_invocation  go to state 36


State 69

   42 expression: expression '/' . expression

    NEQ         shift, and go to state 25
    IDENTIFIERS  shift, and go to state 26
    INT_CONST   shift, and go to state 27
    REAL_CONST  shift, and go to state 28
    STR_CONST   shift, and go to state 29
    BOOL_CONST  shift, and go to state 30
    '-'         shift, and go to state 31
    '~'         shift, and go to state 32
    '('         shift, and go to state 33

    const_value          go to state 34
    expression           go to state 104
    function_invocation  go to state 36


State 70

   43 expression: expression '+' . expression

    NEQ         shift, and go to state 25
    IDENTIFIERS  shift, and go to state 26
    INT_CONST   shift, and go to state 27
    REAL_CONST  shift, and go to state 28
    STR_CONST   shift, and go to state 29
    BOOL_CONST  shift, and go to state 30
    '-'         shift, and go to state 31
    '~'         shift, and go to state 32
    '('         shift, and go to state 33

    const_value          go to state 34
    expression           go to state 105
    function_invocation  go to state 36


State 71

   44 expression: expression '-' . expression

    NEQ         shift, and go to state 25
    IDENTIFIERS  shift, and go to state 26
    INT_CONST   shift, and go to state 27
    REAL_CONST  shift, and go to state 28
    STR_CONST   shift, and go to state 29
    BOOL_CONST  shift, and go to state 30
    '-'         shift, and go to state 31
    '~'         shift, and go to state 32
    '('         shift, and go to state 33

    const_value          go to state 34
    expression           go to state 106
    function_invocation  go to state 36


State 72

   45 expression: expression '<' . expression

    NEQ         shift, and go to state 25
    IDENTIFIERS  shift, and go to state 26
    INT_CONST   shift, and go to state 27
    REAL_CONST  shift, and go to state 28
    STR_CONST   shift, and go to state 29
    BOOL_CONST  shift, and go to state 30
    '-'         shift, and go to state 31
    '~'         shift, and go to state 32
    '('         shift, and go to state 33

    const_value          go to state 34
    expression           go to state 107
    function_invocation  go to state 36


State 73

   47 expression: expression '=' . expression

    NEQ         shift, and go to state 25
    IDENTIFIERS  shift, and go to state 26
    INT_CONST   shift, and go to state 27
    REAL_CONST  shift, and go to state 28
    STR_CONST   shift, and go to state 29
    BOOL_CONST  shift, and go to state 30
    '-'         shift, and go to state 31
    '~'         shift, and go to state 32
    '('         shift, and go to state 33

    const_value          go to state 34
    expression           go to state 108
    function_invocation  go to state 36


State 74

   46 expression: expression '>' . expression

    NEQ         shift, and go to state 25
    IDENTIFIERS  shift, and go to state 26
    INT_CONST   shift, and go to state 27
    REAL_CONST  shift, and go to state 28
    STR_CONST   shift, and go to state 29
    BOOL_CONST  shift, and go to state 30
    '-'         shift, and go to state 31
    '~'         shift, and go to state 32
    '('         shift, and go to state 33

    const_value          go to state 34
    expression           go to state 109
    function_invocation  go to state 36


State 75

    6 constants: CONST IDENTIFIERS '=' expression ';' . optional_con_exp

    $default  reduce using rule 8 (optional_con_exp)

    optional_con_exp  go to state 110


State 76

   11 optional_var_exp: IDENTIFIERS ':' data_type ';' .

    $default  reduce using rule 11 (optional_var_exp)


State 77

   12 optional_var_exp: optional_var_exp IDENTIFIERS ':' data_type . ';'

    ';'  shift, and go to state 111


State 78

   10 variables: IDENTIFIERS ':' ARRAY '[' INT_CONST . ',' INT_CONST ']' OF data_type ';'

    ','  shift, and go to state 112


State 79

   15 optional_arguments: IDENTIFIERS . ':' data_type

    ':'  shift, and go to state 113


State 80

   13 optional_arg_parentheses: '(' optional_arguments . ')'
   16 optional_arguments: optional_arguments . ',' IDENTIFIERS ':' data_type

    ','  shift, and go to state 114
    ')'  shift, and go to state 115


State 81

   18 opt_func_type: ':' . data_type

    BOOLEAN  shift, and go to state 37
    INTEGER  shift, and go to state 38
    REAL     shift, and go to state 39
    STRING   shift, and go to state 40

    data_type  go to state 116


State 82

    2 Procedure_dec: PROCEDURE IDENTIFIERS optional_arg_parentheses opt_func_type . optional_var_con_declaration BEGIN optional_statement END IDENTIFIERS ';'

    CONST       shift, and go to state 5
    VAR         shift, and go to state 6
    IDENTIFIERS  shift, and go to state 7

    $default  reduce using rule 5 (optional_var_con_declaration)

    optional_var_con_declaration  go to state 117
    constants                     go to state 9
    variables                     go to state 10


State 83

   57 conditional_statement: IF '(' . expression ')' THEN optional_statement ELSE optional_statement END ';'
   58                      | IF '(' . expression ')' THEN optional_statement END ';'

    NEQ         shift, and go to state 25
    IDENTIFIERS  shift, and go to state 26
    INT_CONST   shift, and go to state 27
    REAL_CONST  shift, and go to state 28
    STR_CONST   shift, and go to state 29
    BOOL_CONST  shift, and go to state 30
    '-'         shift, and go to state 31
    '~'         shift, and go to state 32
    '('         shift, and go to state 33

    const_value          go to state 34
    expression           go to state 118
    function_invocation  go to state 36


State 84

   30 statement: PRINT expression . ';'
   41 expression: expression . '*' expression
   42           | expression . '/' expression
   43           | expression . '+' expression
   44           | expression . '-' expression
   45           | expression . '<' expression
   46           | expression . '>' expression
   47           | expression . '=' expression
   48           | expression . LE_EQ expression
   49           | expression . GR_EQ expression
   52           | expression . AND expression
   53           | expression . OR expression

    AND    shift, and go to state 64
    OR     shift, and go to state 65
    LE_EQ  shift, and go to state 66
    GR_EQ  shift, and go to state 67
    '*'    shift, and go to state 68
    '/'    shift, and go to state 69
    '+'    shift, and go to state 70
    '-'    shift, and go to state 71
    '<'    shift, and go to state 72
    '='    shift, and go to state 73
    '>'    shift, and go to state 74
    ';'    shift, and go to state 119


State 85

   31 statement: PRINTLN expression . ';'
   41 expression: expression . '*' expression
   42           | expression . '/' expression
   43           | expression . '+' expression
   44           | expression . '-' expression
   45           | expression . '<' expression
   46           | expression . '>' expression
   47           | expression . '=' expression
   48           | expression . LE_EQ expression
   49           | expression . GR_EQ expression
   52           | expression . AND expression
   53           | expression . OR expression

    AND    shift, and go to state 64
    OR     shift, and go to state 65
    LE_EQ  shift, and go to state 66
    GR_EQ  shift, and go to state 67
    '*'    shift, and go to state 68
    '/'    shift, and go to state 69
    '+'    shift, and go to state 70
    '-'    shift, and go to state 71
    '<'    shift, and go to state 72
    '='    shift, and go to state 73
    '>'    shift, and go to state 74
    ';'    shift, and go to state 120


State 86

   33 statement: RETURN ';' .

    $default  reduce using rule 33 (statement)


State 87

   34 statement: RETURN expression . ';'
   41 expression: expression . '*' expression
   42           | expression . '/' expression
   43           | expression . '+' expression
   44           | expression . '-' expression
   45           | expression . '<' expression
   46           | expression . '>' expression
   47           | expression . '=' expression
   48           | expression . LE_EQ expression
   49           | expression . GR_EQ expression
   52           | expression . AND expression
   53           | expression . OR expression

    AND    shift, and go to state 64
    OR     shift, and go to state 65
    LE_EQ  shift, and go to state 66
    GR_EQ  shift, and go to state 67
    '*'    shift, and go to state 68
    '/'    shift, and go to state 69
    '+'    shift, and go to state 70
    '-'    shift, and go to state 71
    '<'    shift, and go to state 72
    '='    shift, and go to state 73
    '>'    shift, and go to state 74
    ';'    shift, and go to state 121


State 88

   59 loop_statement: WHILE '(' . expression ')' DO optional_statement END ';'

    NEQ         shift, and go to state 25
    IDENTIFIERS  shift, and go to state 26
    INT_CONST   shift, and go to state 27
    REAL_CONST  shift, and go to state 28
    STR_CONST   shift, and go to state 29
    BOOL_CONST  shift, and go to state 30
    '-'         shift, and go to state 31
    '~'         shift, and go to state 32
    '('         shift, and go to state 33

    const_value          go to state 34
    expression           go to state 122
    function_invocation  go to state 36


State 89

   32 statement: READ IDENTIFIERS . ';'

    ';'  shift, and go to state 123


State 90

   28 statement: IDENTIFIERS EQ . expression ';'

    NEQ         shift, and go to state 25
    IDENTIFIERS  shift, and go to state 26
    INT_CONST   shift, and go to state 27
    REAL_CONST  shift, and go to state 28
    STR_CONST   shift, and go to state 29
    BOOL_CONST  shift, and go to state 30
    '-'         shift, and go to state 31
    '~'         shift, and go to state 32
    '('         shift, and go to state 33

    const_value          go to state 34
    expression           go to state 124
    function_invocation  go to state 36


State 91

   29 statement: IDENTIFIERS '[' . expression ']' EQ expression ';'

    NEQ         shift, and go to state 25
    IDENTIFIERS  shift, and go to state 26
    INT_CONST   shift, and go to state 27
    REAL_CONST  shift, and go to state 28
    STR_CONST   shift, and go to state 29
    BOOL_CONST  shift, and go to state 30
    '-'         shift, and go to state 31
    '~'         shift, and go to state 32
    '('         shift, and go to state 33

    const_value          go to state 34
    expression           go to state 125
    function_invocation  go to state 36


State 92

   60 optional_statement: statement optional_statement .

    $default  reduce using rule 60 (optional_statement)


State 93

    1 program: MODULE IDENTIFIERS optional_var_con_declaration Procedure_dec BEGIN optional_statement END . IDENTIFIERS '.'

    IDENTIFIERS  shift, and go to state 126


State 94

   35 statement: function_invocation ';' .

    $default  reduce using rule 35 (statement)


State 95

   41 expression: expression . '*' expression
   42           | expression . '/' expression
   43           | expression . '+' expression
   44           | expression . '-' expression
   45           | expression . '<' expression
   46           | expression . '>' expression
   47           | expression . '=' expression
   48           | expression . LE_EQ expression
   49           | expression . GR_EQ expression
   52           | expression . AND expression
   53           | expression . OR expression
   54           | IDENTIFIERS '[' expression . ']'

    AND    shift, and go to state 64
    OR     shift, and go to state 65
    LE_EQ  shift, and go to state 66
    GR_EQ  shift, and go to state 67
    '*'    shift, and go to state 68
    '/'    shift, and go to state 69
    '+'    shift, and go to state 70
    '-'    shift, and go to state 71
    '<'    shift, and go to state 72
    '='    shift, and go to state 73
    '>'    shift, and go to state 74
    ']'    shift, and go to state 127


State 96

   41 expression: expression . '*' expression
   42           | expression . '/' expression
   43           | expression . '+' expression
   44           | expression . '-' expression
   45           | expression . '<' expression
   46           | expression . '>' expression
   47           | expression . '=' expression
   48           | expression . LE_EQ expression
   49           | expression . GR_EQ expression
   52           | expression . AND expression
   53           | expression . OR expression
   63 optional_comma_separated_expression: expression .

    AND    shift, and go to state 64
    OR     shift, and go to state 65
    LE_EQ  shift, and go to state 66
    GR_EQ  shift, and go to state 67
    '*'    shift, and go to state 68
    '/'    shift, and go to state 69
    '+'    shift, and go to state 70
    '-'    shift, and go to state 71
    '<'    shift, and go to state 72
    '='    shift, and go to state 73
    '>'    shift, and go to state 74

    $default  reduce using rule 63 (optional_comma_separated_expression)


State 97

   62 function_invocation: IDENTIFIERS '(' optional_comma_separated_expression . ')'
   64 optional_comma_separated_expression: optional_comma_separated_expression . ',' expression

    ','  shift, and go to state 128
    ')'  shift, and go to state 129


State 98

   55 expression: '(' expression ')' .

    $default  reduce using rule 55 (expression)


State 99

   41 expression: expression . '*' expression
   42           | expression . '/' expression
   43           | expression . '+' expression
   44           | expression . '-' expression
   45           | expression . '<' expression
   46           | expression . '>' expression
   47           | expression . '=' expression
   48           | expression . LE_EQ expression
   49           | expression . GR_EQ expression
   52           | expression . AND expression
   52           | expression AND expression .
   53           | expression . OR expression

    OR  shift, and go to state 65

    $default  reduce using rule 52 (expression)


State 100

   41 expression: expression . '*' expression
   42           | expression . '/' expression
   43           | expression . '+' expression
   44           | expression . '-' expression
   45           | expression . '<' expression
   46           | expression . '>' expression
   47           | expression . '=' expression
   48           | expression . LE_EQ expression
   49           | expression . GR_EQ expression
   52           | expression . AND expression
   53           | expression . OR expression
   53           | expression OR expression .

    $default  reduce using rule 53 (expression)


State 101

   41 expression: expression . '*' expression
   42           | expression . '/' expression
   43           | expression . '+' expression
   44           | expression . '-' expression
   45           | expression . '<' expression
   46           | expression . '>' expression
   47           | expression . '=' expression
   48           | expression . LE_EQ expression
   48           | expression LE_EQ expression .
   49           | expression . GR_EQ expression
   52           | expression . AND expression
   53           | expression . OR expression

    AND  shift, and go to state 64
    OR   shift, and go to state 65

    $default  reduce using rule 48 (expression)


State 102

   41 expression: expression . '*' expression
   42           | expression . '/' expression
   43           | expression . '+' expression
   44           | expression . '-' expression
   45           | expression . '<' expression
   46           | expression . '>' expression
   47           | expression . '=' expression
   48           | expression . LE_EQ expression
   49           | expression . GR_EQ expression
   49           | expression GR_EQ expression .
   52           | expression . AND expression
   53           | expression . OR expression

    AND  shift, and go to state 64
    OR   shift, and go to state 65

    $default  reduce using rule 49 (expression)


State 103

   41 expression: expression . '*' expression
   41           | expression '*' expression .
   42           | expression . '/' expression
   43           | expression . '+' expression
   44           | expression . '-' expression
   45           | expression . '<' expression
   46           | expression . '>' expression
   47           | expression . '=' expression
   48           | expression . LE_EQ expression
   49           | expression . GR_EQ expression
   52           | expression . AND expression
   53           | expression . OR expression

    AND    shift, and go to state 64
    OR     shift, and go to state 65
    LE_EQ  shift, and go to state 66
    GR_EQ  shift, and go to state 67
    '+'    shift, and go to state 70
    '-'    shift, and go to state 71
    '<'    shift, and go to state 72
    '='    shift, and go to state 73
    '>'    shift, and go to state 74

    $default  reduce using rule 41 (expression)


State 104

   41 expression: expression . '*' expression
   42           | expression . '/' expression
   42           | expression '/' expression .
   43           | expression . '+' expression
   44           | expression . '-' expression
   45           | expression . '<' expression
   46           | expression . '>' expression
   47           | expression . '=' expression
   48           | expression . LE_EQ expression
   49           | expression . GR_EQ expression
   52           | expression . AND expression
   53           | expression . OR expression

    AND    shift, and go to state 64
    OR     shift, and go to state 65
    LE_EQ  shift, and go to state 66
    GR_EQ  shift, and go to state 67
    '+'    shift, and go to state 70
    '-'    shift, and go to state 71
    '<'    shift, and go to state 72
    '='    shift, and go to state 73
    '>'    shift, and go to state 74

    $default  reduce using rule 42 (expression)


State 105

   41 expression: expression . '*' expression
   42           | expression . '/' expression
   43           | expression . '+' expression
   43           | expression '+' expression .
   44           | expression . '-' expression
   45           | expression . '<' expression
   46           | expression . '>' expression
   47           | expression . '=' expression
   48           | expression . LE_EQ expression
   49           | expression . GR_EQ expression
   52           | expression . AND expression
   53           | expression . OR expression

    AND    shift, and go to state 64
    OR     shift, and go to state 65
    LE_EQ  shift, and go to state 66
    GR_EQ  shift, and go to state 67
    '<'    shift, and go to state 72
    '='    shift, and go to state 73
    '>'    shift, and go to state 74

    $default  reduce using rule 43 (expression)


State 106

   41 expression: expression . '*' expression
   42           | expression . '/' expression
   43           | expression . '+' expression
   44           | expression . '-' expression
   44           | expression '-' expression .
   45           | expression . '<' expression
   46           | expression . '>' expression
   47           | expression . '=' expression
   48           | expression . LE_EQ expression
   49           | expression . GR_EQ expression
   52           | expression . AND expression
   53           | expression . OR expression

    AND    shift, and go to state 64
    OR     shift, and go to state 65
    LE_EQ  shift, and go to state 66
    GR_EQ  shift, and go to state 67
    '<'    shift, and go to state 72
    '='    shift, and go to state 73
    '>'    shift, and go to state 74

    $default  reduce using rule 44 (expression)


State 107

   41 expression: expression . '*' expression
   42           | expression . '/' expression
   43           | expression . '+' expression
   44           | expression . '-' expression
   45           | expression . '<' expression
   45           | expression '<' expression .
   46           | expression . '>' expression
   47           | expression . '=' expression
   48           | expression . LE_EQ expression
   49           | expression . GR_EQ expression
   52           | expression . AND expression
   53           | expression . OR expression

    AND  shift, and go to state 64
    OR   shift, and go to state 65

    $default  reduce using rule 45 (expression)


State 108

   41 expression: expression . '*' expression
   42           | expression . '/' expression
   43           | expression . '+' expression
   44           | expression . '-' expression
   45           | expression . '<' expression
   46           | expression . '>' expression
   47           | expression . '=' expression
   47           | expression '=' expression .
   48           | expression . LE_EQ expression
   49           | expression . GR_EQ expression
   52           | expression . AND expression
   53           | expression . OR expression

    AND  shift, and go to state 64
    OR   shift, and go to state 65

    $default  reduce using rule 47 (expression)


State 109

   41 expression: expression . '*' expression
   42           | expression . '/' expression
   43           | expression . '+' expression
   44           | expression . '-' expression
   45           | expression . '<' expression
   46           | expression . '>' expression
   46           | expression '>' expression .
   47           | expression . '=' expression
   48           | expression . LE_EQ expression
   49           | expression . GR_EQ expression
   52           | expression . AND expression
   53           | expression . OR expression

    AND  shift, and go to state 64
    OR   shift, and go to state 65

    $default  reduce using rule 46 (expression)


State 110

    6 constants: CONST IDENTIFIERS '=' expression ';' optional_con_exp .
    7 optional_con_exp: optional_con_exp . IDENTIFIERS '=' expression ';'

    IDENTIFIERS  shift, and go to state 130

    IDENTIFIERS  [reduce using rule 6 (constants)]
    $default    reduce using rule 6 (constants)


State 111

   12 optional_var_exp: optional_var_exp IDENTIFIERS ':' data_type ';' .

    $default  reduce using rule 12 (optional_var_exp)


State 112

   10 variables: IDENTIFIERS ':' ARRAY '[' INT_CONST ',' . INT_CONST ']' OF data_type ';'

    INT_CONST  shift, and go to state 131


State 113

   15 optional_arguments: IDENTIFIERS ':' . data_type

    BOOLEAN  shift, and go to state 37
    INTEGER  shift, and go to state 38
    REAL     shift, and go to state 39
    STRING   shift, and go to state 40

    data_type  go to state 132


State 114

   16 optional_arguments: optional_arguments ',' . IDENTIFIERS ':' data_type

    IDENTIFIERS  shift, and go to state 133


State 115

   13 optional_arg_parentheses: '(' optional_arguments ')' .

    $default  reduce using rule 13 (optional_arg_parentheses)


State 116

   18 opt_func_type: ':' data_type .

    $default  reduce using rule 18 (opt_func_type)


State 117

    2 Procedure_dec: PROCEDURE IDENTIFIERS optional_arg_parentheses opt_func_type optional_var_con_declaration . BEGIN optional_statement END IDENTIFIERS ';'

    BEGIN  shift, and go to state 134


State 118

   41 expression: expression . '*' expression
   42           | expression . '/' expression
   43           | expression . '+' expression
   44           | expression . '-' expression
   45           | expression . '<' expression
   46           | expression . '>' expression
   47           | expression . '=' expression
   48           | expression . LE_EQ expression
   49           | expression . GR_EQ expression
   52           | expression . AND expression
   53           | expression . OR expression
   57 conditional_statement: IF '(' expression . ')' THEN optional_statement ELSE optional_statement END ';'
   58                      | IF '(' expression . ')' THEN optional_statement END ';'

    AND    shift, and go to state 64
    OR     shift, and go to state 65
    LE_EQ  shift, and go to state 66
    GR_EQ  shift, and go to state 67
    '*'    shift, and go to state 68
    '/'    shift, and go to state 69
    '+'    shift, and go to state 70
    '-'    shift, and go to state 71
    '<'    shift, and go to state 72
    '='    shift, and go to state 73
    '>'    shift, and go to state 74
    ')'    shift, and go to state 135


State 119

   30 statement: PRINT expression ';' .

    $default  reduce using rule 30 (statement)


State 120

   31 statement: PRINTLN expression ';' .

    $default  reduce using rule 31 (statement)


State 121

   34 statement: RETURN expression ';' .

    $default  reduce using rule 34 (statement)


State 122

   41 expression: expression . '*' expression
   42           | expression . '/' expression
   43           | expression . '+' expression
   44           | expression . '-' expression
   45           | expression . '<' expression
   46           | expression . '>' expression
   47           | expression . '=' expression
   48           | expression . LE_EQ expression
   49           | expression . GR_EQ expression
   52           | expression . AND expression
   53           | expression . OR expression
   59 loop_statement: WHILE '(' expression . ')' DO optional_statement END ';'

    AND    shift, and go to state 64
    OR     shift, and go to state 65
    LE_EQ  shift, and go to state 66
    GR_EQ  shift, and go to state 67
    '*'    shift, and go to state 68
    '/'    shift, and go to state 69
    '+'    shift, and go to state 70
    '-'    shift, and go to state 71
    '<'    shift, and go to state 72
    '='    shift, and go to state 73
    '>'    shift, and go to state 74
    ')'    shift, and go to state 136


State 123

   32 statement: READ IDENTIFIERS ';' .

    $default  reduce using rule 32 (statement)


State 124

   28 statement: IDENTIFIERS EQ expression . ';'
   41 expression: expression . '*' expression
   42           | expression . '/' expression
   43           | expression . '+' expression
   44           | expression . '-' expression
   45           | expression . '<' expression
   46           | expression . '>' expression
   47           | expression . '=' expression
   48           | expression . LE_EQ expression
   49           | expression . GR_EQ expression
   52           | expression . AND expression
   53           | expression . OR expression

    AND    shift, and go to state 64
    OR     shift, and go to state 65
    LE_EQ  shift, and go to state 66
    GR_EQ  shift, and go to state 67
    '*'    shift, and go to state 68
    '/'    shift, and go to state 69
    '+'    shift, and go to state 70
    '-'    shift, and go to state 71
    '<'    shift, and go to state 72
    '='    shift, and go to state 73
    '>'    shift, and go to state 74
    ';'    shift, and go to state 137


State 125

   29 statement: IDENTIFIERS '[' expression . ']' EQ expression ';'
   41 expression: expression . '*' expression
   42           | expression . '/' expression
   43           | expression . '+' expression
   44           | expression . '-' expression
   45           | expression . '<' expression
   46           | expression . '>' expression
   47           | expression . '=' expression
   48           | expression . LE_EQ expression
   49           | expression . GR_EQ expression
   52           | expression . AND expression
   53           | expression . OR expression

    AND    shift, and go to state 64
    OR     shift, and go to state 65
    LE_EQ  shift, and go to state 66
    GR_EQ  shift, and go to state 67
    '*'    shift, and go to state 68
    '/'    shift, and go to state 69
    '+'    shift, and go to state 70
    '-'    shift, and go to state 71
    '<'    shift, and go to state 72
    '='    shift, and go to state 73
    '>'    shift, and go to state 74
    ']'    shift, and go to state 138


State 126

    1 program: MODULE IDENTIFIERS optional_var_con_declaration Procedure_dec BEGIN optional_statement END IDENTIFIERS . '.'

    '.'  shift, and go to state 139


State 127

   54 expression: IDENTIFIERS '[' expression ']' .

    $default  reduce using rule 54 (expression)


State 128

   64 optional_comma_separated_expression: optional_comma_separated_expression ',' . expression

    NEQ         shift, and go to state 25
    IDENTIFIERS  shift, and go to state 26
    INT_CONST   shift, and go to state 27
    REAL_CONST  shift, and go to state 28
    STR_CONST   shift, and go to state 29
    BOOL_CONST  shift, and go to state 30
    '-'         shift, and go to state 31
    '~'         shift, and go to state 32
    '('         shift, and go to state 33

    const_value          go to state 34
    expression           go to state 140
    function_invocation  go to state 36


State 129

   62 function_invocation: IDENTIFIERS '(' optional_comma_separated_expression ')' .

    $default  reduce using rule 62 (function_invocation)


State 130

    7 optional_con_exp: optional_con_exp IDENTIFIERS . '=' expression ';'

    '='  shift, and go to state 141


State 131

   10 variables: IDENTIFIERS ':' ARRAY '[' INT_CONST ',' INT_CONST . ']' OF data_type ';'

    ']'  shift, and go to state 142


State 132

   15 optional_arguments: IDENTIFIERS ':' data_type .

    $default  reduce using rule 15 (optional_arguments)


State 133

   16 optional_arguments: optional_arguments ',' IDENTIFIERS . ':' data_type

    ':'  shift, and go to state 143


State 134

    2 Procedure_dec: PROCEDURE IDENTIFIERS optional_arg_parentheses opt_func_type optional_var_con_declaration BEGIN . optional_statement END IDENTIFIERS ';'

    IF          shift, and go to state 46
    PRINT       shift, and go to state 47
    PRINTLN     shift, and go to state 48
    RETURN      shift, and go to state 49
    WHILE       shift, and go to state 50
    READ        shift, and go to state 51
    IDENTIFIERS  shift, and go to state 52

    statement              go to state 53
    conditional_statement  go to state 54
    loop_statement         go to state 55
    optional_statement     go to state 144
    function_invocation    go to state 57


State 135

   57 conditional_statement: IF '(' expression ')' . THEN optional_statement ELSE optional_statement END ';'
   58                      | IF '(' expression ')' . THEN optional_statement END ';'

    THEN  shift, and go to state 145


State 136

   59 loop_statement: WHILE '(' expression ')' . DO optional_statement END ';'

    DO  shift, and go to state 146


State 137

   28 statement: IDENTIFIERS EQ expression ';' .

    $default  reduce using rule 28 (statement)


State 138

   29 statement: IDENTIFIERS '[' expression ']' . EQ expression ';'

    EQ  shift, and go to state 147


State 139

    1 program: MODULE IDENTIFIERS optional_var_con_declaration Procedure_dec BEGIN optional_statement END IDENTIFIERS '.' .

    $default  reduce using rule 1 (program)


State 140

   41 expression: expression . '*' expression
   42           | expression . '/' expression
   43           | expression . '+' expression
   44           | expression . '-' expression
   45           | expression . '<' expression
   46           | expression . '>' expression
   47           | expression . '=' expression
   48           | expression . LE_EQ expression
   49           | expression . GR_EQ expression
   52           | expression . AND expression
   53           | expression . OR expression
   64 optional_comma_separated_expression: optional_comma_separated_expression ',' expression .

    AND    shift, and go to state 64
    OR     shift, and go to state 65
    LE_EQ  shift, and go to state 66
    GR_EQ  shift, and go to state 67
    '*'    shift, and go to state 68
    '/'    shift, and go to state 69
    '+'    shift, and go to state 70
    '-'    shift, and go to state 71
    '<'    shift, and go to state 72
    '='    shift, and go to state 73
    '>'    shift, and go to state 74

    $default  reduce using rule 64 (optional_comma_separated_expression)


State 141

    7 optional_con_exp: optional_con_exp IDENTIFIERS '=' . expression ';'

    NEQ         shift, and go to state 25
    IDENTIFIERS  shift, and go to state 26
    INT_CONST   shift, and go to state 27
    REAL_CONST  shift, and go to state 28
    STR_CONST   shift, and go to state 29
    BOOL_CONST  shift, and go to state 30
    '-'         shift, and go to state 31
    '~'         shift, and go to state 32
    '('         shift, and go to state 33

    const_value          go to state 34
    expression           go to state 148
    function_invocation  go to state 36


State 142

   10 variables: IDENTIFIERS ':' ARRAY '[' INT_CONST ',' INT_CONST ']' . OF data_type ';'

    OF  shift, and go to state 149


State 143

   16 optional_arguments: optional_arguments ',' IDENTIFIERS ':' . data_type

    BOOLEAN  shift, and go to state 37
    INTEGER  shift, and go to state 38
    REAL     shift, and go to state 39
    STRING   shift, and go to state 40

    data_type  go to state 150


State 144

    2 Procedure_dec: PROCEDURE IDENTIFIERS optional_arg_parentheses opt_func_type optional_var_con_declaration BEGIN optional_statement . END IDENTIFIERS ';'

    END  shift, and go to state 151


State 145

   57 conditional_statement: IF '(' expression ')' THEN . optional_statement ELSE optional_statement END ';'
   58                      | IF '(' expression ')' THEN . optional_statement END ';'

    IF          shift, and go to state 46
    PRINT       shift, and go to state 47
    PRINTLN     shift, and go to state 48
    RETURN      shift, and go to state 49
    WHILE       shift, and go to state 50
    READ        shift, and go to state 51
    IDENTIFIERS  shift, and go to state 52

    statement              go to state 53
    conditional_statement  go to state 54
    loop_statement         go to state 55
    optional_statement     go to state 152
    function_invocation    go to state 57


State 146

   59 loop_statement: WHILE '(' expression ')' DO . optional_statement END ';'

    IF          shift, and go to state 46
    PRINT       shift, and go to state 47
    PRINTLN     shift, and go to state 48
    RETURN      shift, and go to state 49
    WHILE       shift, and go to state 50
    READ        shift, and go to state 51
    IDENTIFIERS  shift, and go to state 52

    statement              go to state 53
    conditional_statement  go to state 54
    loop_statement         go to state 55
    optional_statement     go to state 153
    function_invocation    go to state 57


State 147

   29 statement: IDENTIFIERS '[' expression ']' EQ . expression ';'

    NEQ         shift, and go to state 25
    IDENTIFIERS  shift, and go to state 26
    INT_CONST   shift, and go to state 27
    REAL_CONST  shift, and go to state 28
    STR_CONST   shift, and go to state 29
    BOOL_CONST  shift, and go to state 30
    '-'         shift, and go to state 31
    '~'         shift, and go to state 32
    '('         shift, and go to state 33

    const_value          go to state 34
    expression           go to state 154
    function_invocation  go to state 36


State 148

    7 optional_con_exp: optional_con_exp IDENTIFIERS '=' expression . ';'
   41 expression: expression . '*' expression
   42           | expression . '/' expression
   43           | expression . '+' expression
   44           | expression . '-' expression
   45           | expression . '<' expression
   46           | expression . '>' expression
   47           | expression . '=' expression
   48           | expression . LE_EQ expression
   49           | expression . GR_EQ expression
   52           | expression . AND expression
   53           | expression . OR expression

    AND    shift, and go to state 64
    OR     shift, and go to state 65
    LE_EQ  shift, and go to state 66
    GR_EQ  shift, and go to state 67
    '*'    shift, and go to state 68
    '/'    shift, and go to state 69
    '+'    shift, and go to state 70
    '-'    shift, and go to state 71
    '<'    shift, and go to state 72
    '='    shift, and go to state 73
    '>'    shift, and go to state 74
    ';'    shift, and go to state 155


State 149

   10 variables: IDENTIFIERS ':' ARRAY '[' INT_CONST ',' INT_CONST ']' OF . data_type ';'

    BOOLEAN  shift, and go to state 37
    INTEGER  shift, and go to state 38
    REAL     shift, and go to state 39
    STRING   shift, and go to state 40

    data_type  go to state 156


State 150

   16 optional_arguments: optional_arguments ',' IDENTIFIERS ':' data_type .

    $default  reduce using rule 16 (optional_arguments)


State 151

    2 Procedure_dec: PROCEDURE IDENTIFIERS optional_arg_parentheses opt_func_type optional_var_con_declaration BEGIN optional_statement END . IDENTIFIERS ';'

    IDENTIFIERS  shift, and go to state 157


State 152

   57 conditional_statement: IF '(' expression ')' THEN optional_statement . ELSE optional_statement END ';'
   58                      | IF '(' expression ')' THEN optional_statement . END ';'

    ELSE  shift, and go to state 158
    END   shift, and go to state 159


State 153

   59 loop_statement: WHILE '(' expression ')' DO optional_statement . END ';'

    END  shift, and go to state 160


State 154

   29 statement: IDENTIFIERS '[' expression ']' EQ expression . ';'
   41 expression: expression . '*' expression
   42           | expression . '/' expression
   43           | expression . '+' expression
   44           | expression . '-' expression
   45           | expression . '<' expression
   46           | expression . '>' expression
   47           | expression . '=' expression
   48           | expression . LE_EQ expression
   49           | expression . GR_EQ expression
   52           | expression . AND expression
   53           | expression . OR expression

    AND    shift, and go to state 64
    OR     shift, and go to state 65
    LE_EQ  shift, and go to state 66
    GR_EQ  shift, and go to state 67
    '*'    shift, and go to state 68
    '/'    shift, and go to state 69
    '+'    shift, and go to state 70
    '-'    shift, and go to state 71
    '<'    shift, and go to state 72
    '='    shift, and go to state 73
    '>'    shift, and go to state 74
    ';'    shift, and go to state 161


State 155

    7 optional_con_exp: optional_con_exp IDENTIFIERS '=' expression ';' .

    $default  reduce using rule 7 (optional_con_exp)


State 156

   10 variables: IDENTIFIERS ':' ARRAY '[' INT_CONST ',' INT_CONST ']' OF data_type . ';'

    ';'  shift, and go to state 162


State 157

    2 Procedure_dec: PROCEDURE IDENTIFIERS optional_arg_parentheses opt_func_type optional_var_con_declaration BEGIN optional_statement END IDENTIFIERS . ';'

    ';'  shift, and go to state 163


State 158

   57 conditional_statement: IF '(' expression ')' THEN optional_statement ELSE . optional_statement END ';'

    IF          shift, and go to state 46
    PRINT       shift, and go to state 47
    PRINTLN     shift, and go to state 48
    RETURN      shift, and go to state 49
    WHILE       shift, and go to state 50
    READ        shift, and go to state 51
    IDENTIFIERS  shift, and go to state 52

    statement              go to state 53
    conditional_statement  go to state 54
    loop_statement         go to state 55
    optional_statement     go to state 164
    function_invocation    go to state 57


State 159

   58 conditional_statement: IF '(' expression ')' THEN optional_statement END . ';'

    ';'  shift, and go to state 165


State 160

   59 loop_statement: WHILE '(' expression ')' DO optional_statement END . ';'

    ';'  shift, and go to state 166


State 161

   29 statement: IDENTIFIERS '[' expression ']' EQ expression ';' .

    $default  reduce using rule 29 (statement)


State 162

   10 variables: IDENTIFIERS ':' ARRAY '[' INT_CONST ',' INT_CONST ']' OF data_type ';' .

    $default  reduce using rule 10 (variables)


State 163

    2 Procedure_dec: PROCEDURE IDENTIFIERS optional_arg_parentheses opt_func_type optional_var_con_declaration BEGIN optional_statement END IDENTIFIERS ';' .

    $default  reduce using rule 2 (Procedure_dec)


State 164

   57 conditional_statement: IF '(' expression ')' THEN optional_statement ELSE optional_statement . END ';'

    END  shift, and go to state 167


State 165

   58 conditional_statement: IF '(' expression ')' THEN optional_statement END ';' .

    $default  reduce using rule 58 (conditional_statement)


State 166

   59 loop_statement: WHILE '(' expression ')' DO optional_statement END ';' .

    $default  reduce using rule 59 (loop_statement)


State 167

   57 conditional_statement: IF '(' expression ')' THEN optional_statement ELSE optional_statement END . ';'

    ';'  shift, and go to state 168


State 168

   57 conditional_statement: IF '(' expression ')' THEN optional_statement ELSE optional_statement END ';' .

    $default  reduce using rule 57 (conditional_statement)
