Terminals unused in grammar

   ARRAY
   BREAK
   CHAR
   CASE
   CONTINUE
   EXIT
   FALSE
   FOR
   FN
   IN
   LOOP
   REPEAT
   RECORD
   TURE
   TYPE
   USE
   UTIL
   OF


State 9 conflicts: 1 shift/reduce
State 66 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 $@1: %empty

    2 $@2: %empty

    3 $@3: %empty

    4 $@4: %empty

    5 program: MODULE IDENTIFIER $@1 optional_var_con_declaration Procedure_dec_list $@2 _BEGIN $@3 optional_statement $@4 END IDENTIFIER '.'

    6 optional_var_con_declaration: constants optional_var_con_declaration
    7                             | VAR variables optional_var_con_declaration
    8                             | %empty

    9 Procedure_dec_list: Procedure_dec_list Procedure_dec
   10                   | Procedure_dec
   11                   | %empty

   12 $@5: %empty

   13 $@6: %empty

   14 Procedure_dec: PROCEDURE IDENTIFIER $@5 optional_arg_parentheses opt_func_type $@6 pro_dec2 IDENTIFIER ';'

   15 pro_dec2: optional_var_con_declaration _BEGIN optional_statement END

   16 opt_func_type: ':' data_type
   17              | %empty

   18 constants: CONST IDENTIFIER '=' expression ';'
   19          | IDENTIFIER '=' expression ';'

   20 variables: opt_IDENTIFIER ':' data_type ';' variables
   21          | opt_IDENTIFIER ':' data_type ';'

   22 opt_IDENTIFIER: IDENTIFIER ',' opt_IDENTIFIER
   23               | IDENTIFIER
   24               | %empty

   25 optional_arg_parentheses: '(' optional_arguments ')'
   26                         | %empty

   27 optional_arguments: IDENTIFIER ':' data_type
   28                   | optional_arguments ',' IDENTIFIER ':' data_type
   29                   | %empty

   30 data_type: STRING
   31          | INTEGER
   32          | BOOLEAN
   33          | REAL

   34 const_value: STR_CONST
   35            | INT_CONST
   36            | BOOLEAN_CONST
   37            | REAL_CONST

   38 statement: IDENTIFIER EQ expression ';'

   39 $@7: %empty

   40 statement: $@7 PRINT expression ';'

   41 $@8: %empty

   42 statement: $@8 PRINTLN expression ';'
   43          | RETURN ';'
   44          | RETURN expression ';'
   45          | expression ';'
   46          | conditional_statement
   47          | loop_statement

   48 expression: IDENTIFIER
   49           | const_value
   50           | function_invocation
   51           | expression '*' expression
   52           | expression AND expression
   53           | expression OR expression
   54           | expression '/' expression
   55           | expression '%' expression
   56           | expression '+' expression
   57           | expression '-' expression
   58           | expression '<' expression
   59           | expression '>' expression
   60           | expression '=' expression
   61           | expression LE_EQ expression
   62           | expression GR_EQ expression
   63           | expression NEQ expression
   64           | '~' expression
   65           | '(' expression ')'
   66           | '-' expression

   67 conditional_statement: condition_title optional_statement END ';'

   68 $@9: %empty

   69 $@10: %empty

   70 conditional_statement: condition_title optional_statement $@9 ELSE $@10 optional_statement END ';'

   71 condition_title: IF '(' expression ')' THEN

   72 $@11: %empty

   73 $@12: %empty

   74 loop_statement: WHILE '(' $@11 expression ')' DO $@12 optional_statement END ';'

   75 optional_statement: statement optional_statement
   76                   | statement

   77 function_invocation: IDENTIFIER '(' optional_comma_separated_expression ')'

   78 optional_comma_separated_expression: expression
   79                                    | optional_comma_separated_expression ',' expression


Terminals, with rules where they appear

$end (0) 0
'%' (37) 55
'(' (40) 25 65 71 74 77
')' (41) 25 65 71 74 77
'*' (42) 51
'+' (43) 56
',' (44) 22 28 79
'-' (45) 57 66
'.' (46) 5
'/' (47) 54
':' (58) 16 20 21 27 28
';' (59) 14 18 19 20 21 38 40 42 43 44 45 67 70 74
'<' (60) 58
'=' (61) 18 19 60
'>' (62) 59
'~' (126) 64
error (256)
AND (258) 52
OR (259) 53
EQ (260) 38
LE_EQ (261) 61
GR_EQ (262) 62
NEQ (263) 63
ARRAY (264)
BOOLEAN (265) 32
_BEGIN (266) 5 15
BREAK (267)
CHAR (268)
CASE (269)
CONST (270) 18
CONTINUE (271)
DO (272) 74
ELSE (273) 70
END (274) 5 15 67 70 74
EXIT (275)
FALSE (276)
FOR (277)
FN (278)
IF (279) 71
IN (280)
INTEGER (281) 31
LOOP (282)
MODULE (283) 5
PRINT (284) 40
PRINTLN (285) 42
PROCEDURE (286) 14
REPEAT (287)
RETURN (288) 43 44
REAL (289) 33
STRING (290) 30
RECORD (291)
THEN (292) 71
TURE (293)
TYPE (294)
USE (295)
UTIL (296)
VAR (297) 7
WHILE (298) 74
OF (299)
IDENTIFIER (300) 5 14 18 19 22 23 27 28 38 48 77
INT_CONST (301) 35
STR_CONST (302) 34
BOOLEAN_CONST (303) 36
REAL_CONST (304) 37
UMINUS (305)


Nonterminals, with rules where they appear

$accept (66)
    on left: 0
program (67)
    on left: 5, on right: 0
$@1 (68)
    on left: 1, on right: 5
$@2 (69)
    on left: 2, on right: 5
$@3 (70)
    on left: 3, on right: 5
$@4 (71)
    on left: 4, on right: 5
optional_var_con_declaration (72)
    on left: 6 7 8, on right: 5 6 7 15
Procedure_dec_list (73)
    on left: 9 10 11, on right: 5 9
Procedure_dec (74)
    on left: 14, on right: 9 10
$@5 (75)
    on left: 12, on right: 14
$@6 (76)
    on left: 13, on right: 14
pro_dec2 (77)
    on left: 15, on right: 14
opt_func_type (78)
    on left: 16 17, on right: 14
constants (79)
    on left: 18 19, on right: 6
variables (80)
    on left: 20 21, on right: 7 20
opt_IDENTIFIER (81)
    on left: 22 23 24, on right: 20 21 22
optional_arg_parentheses (82)
    on left: 25 26, on right: 14
optional_arguments (83)
    on left: 27 28 29, on right: 25 28
data_type (84)
    on left: 30 31 32 33, on right: 16 20 21 27 28
const_value (85)
    on left: 34 35 36 37, on right: 49
statement (86)
    on left: 38 40 42 43 44 45 46 47, on right: 75 76
$@7 (87)
    on left: 39, on right: 40
$@8 (88)
    on left: 41, on right: 42
expression (89)
    on left: 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65
    66, on right: 18 19 38 40 42 44 45 51 52 53 54 55 56 57 58 59 60
    61 62 63 64 65 66 71 74 78 79
conditional_statement (90)
    on left: 67 70, on right: 46
$@9 (91)
    on left: 68, on right: 70
$@10 (92)
    on left: 69, on right: 70
condition_title (93)
    on left: 71, on right: 67 70
loop_statement (94)
    on left: 74, on right: 47
$@11 (95)
    on left: 72, on right: 74
$@12 (96)
    on left: 73, on right: 74
optional_statement (97)
    on left: 75 76, on right: 5 15 67 70 74 75
function_invocation (98)
    on left: 77, on right: 50
optional_comma_separated_expression (99)
    on left: 78 79, on right: 77 79


State 0

    0 $accept: . program $end

    MODULE  shift, and go to state 1

    program  go to state 2


State 1

    5 program: MODULE . IDENTIFIER $@1 optional_var_con_declaration Procedure_dec_list $@2 _BEGIN $@3 optional_statement $@4 END IDENTIFIER '.'

    IDENTIFIER  shift, and go to state 3


State 2

    0 $accept: program . $end

    $end  shift, and go to state 4


State 3

    5 program: MODULE IDENTIFIER . $@1 optional_var_con_declaration Procedure_dec_list $@2 _BEGIN $@3 optional_statement $@4 END IDENTIFIER '.'

    $default  reduce using rule 1 ($@1)

    $@1  go to state 5


State 4

    0 $accept: program $end .

    $default  accept


State 5

    5 program: MODULE IDENTIFIER $@1 . optional_var_con_declaration Procedure_dec_list $@2 _BEGIN $@3 optional_statement $@4 END IDENTIFIER '.'

    CONST       shift, and go to state 6
    VAR         shift, and go to state 7
    IDENTIFIER  shift, and go to state 8

    $default  reduce using rule 8 (optional_var_con_declaration)

    optional_var_con_declaration  go to state 9
    constants                     go to state 10


State 6

   18 constants: CONST . IDENTIFIER '=' expression ';'

    IDENTIFIER  shift, and go to state 11


State 7

    7 optional_var_con_declaration: VAR . variables optional_var_con_declaration

    IDENTIFIER  shift, and go to state 12

    $default  reduce using rule 24 (opt_IDENTIFIER)

    variables       go to state 13
    opt_IDENTIFIER  go to state 14


State 8

   19 constants: IDENTIFIER . '=' expression ';'

    '='  shift, and go to state 15


State 9

    5 program: MODULE IDENTIFIER $@1 optional_var_con_declaration . Procedure_dec_list $@2 _BEGIN $@3 optional_statement $@4 END IDENTIFIER '.'

    PROCEDURE  shift, and go to state 16

    PROCEDURE  [reduce using rule 11 (Procedure_dec_list)]
    $default   reduce using rule 11 (Procedure_dec_list)

    Procedure_dec_list  go to state 17
    Procedure_dec       go to state 18


State 10

    6 optional_var_con_declaration: constants . optional_var_con_declaration

    CONST       shift, and go to state 6
    VAR         shift, and go to state 7
    IDENTIFIER  shift, and go to state 8

    $default  reduce using rule 8 (optional_var_con_declaration)

    optional_var_con_declaration  go to state 19
    constants                     go to state 10


State 11

   18 constants: CONST IDENTIFIER . '=' expression ';'

    '='  shift, and go to state 20


State 12

   22 opt_IDENTIFIER: IDENTIFIER . ',' opt_IDENTIFIER
   23               | IDENTIFIER .

    ','  shift, and go to state 21

    $default  reduce using rule 23 (opt_IDENTIFIER)


State 13

    7 optional_var_con_declaration: VAR variables . optional_var_con_declaration

    CONST       shift, and go to state 6
    VAR         shift, and go to state 7
    IDENTIFIER  shift, and go to state 8

    $default  reduce using rule 8 (optional_var_con_declaration)

    optional_var_con_declaration  go to state 22
    constants                     go to state 10


State 14

   20 variables: opt_IDENTIFIER . ':' data_type ';' variables
   21          | opt_IDENTIFIER . ':' data_type ';'

    ':'  shift, and go to state 23


State 15

   19 constants: IDENTIFIER '=' . expression ';'

    IDENTIFIER     shift, and go to state 24
    INT_CONST      shift, and go to state 25
    STR_CONST      shift, and go to state 26
    BOOLEAN_CONST  shift, and go to state 27
    REAL_CONST     shift, and go to state 28
    '-'            shift, and go to state 29
    '~'            shift, and go to state 30
    '('            shift, and go to state 31

    const_value          go to state 32
    expression           go to state 33
    function_invocation  go to state 34


State 16

   14 Procedure_dec: PROCEDURE . IDENTIFIER $@5 optional_arg_parentheses opt_func_type $@6 pro_dec2 IDENTIFIER ';'

    IDENTIFIER  shift, and go to state 35


State 17

    5 program: MODULE IDENTIFIER $@1 optional_var_con_declaration Procedure_dec_list . $@2 _BEGIN $@3 optional_statement $@4 END IDENTIFIER '.'
    9 Procedure_dec_list: Procedure_dec_list . Procedure_dec

    PROCEDURE  shift, and go to state 16

    $default  reduce using rule 2 ($@2)

    $@2            go to state 36
    Procedure_dec  go to state 37


State 18

   10 Procedure_dec_list: Procedure_dec .

    $default  reduce using rule 10 (Procedure_dec_list)


State 19

    6 optional_var_con_declaration: constants optional_var_con_declaration .

    $default  reduce using rule 6 (optional_var_con_declaration)


State 20

   18 constants: CONST IDENTIFIER '=' . expression ';'

    IDENTIFIER     shift, and go to state 24
    INT_CONST      shift, and go to state 25
    STR_CONST      shift, and go to state 26
    BOOLEAN_CONST  shift, and go to state 27
    REAL_CONST     shift, and go to state 28
    '-'            shift, and go to state 29
    '~'            shift, and go to state 30
    '('            shift, and go to state 31

    const_value          go to state 32
    expression           go to state 38
    function_invocation  go to state 34


State 21

   22 opt_IDENTIFIER: IDENTIFIER ',' . opt_IDENTIFIER

    IDENTIFIER  shift, and go to state 12

    $default  reduce using rule 24 (opt_IDENTIFIER)

    opt_IDENTIFIER  go to state 39


State 22

    7 optional_var_con_declaration: VAR variables optional_var_con_declaration .

    $default  reduce using rule 7 (optional_var_con_declaration)


State 23

   20 variables: opt_IDENTIFIER ':' . data_type ';' variables
   21          | opt_IDENTIFIER ':' . data_type ';'

    BOOLEAN  shift, and go to state 40
    INTEGER  shift, and go to state 41
    REAL     shift, and go to state 42
    STRING   shift, and go to state 43

    data_type  go to state 44


State 24

   48 expression: IDENTIFIER .
   77 function_invocation: IDENTIFIER . '(' optional_comma_separated_expression ')'

    '('  shift, and go to state 45

    $default  reduce using rule 48 (expression)


State 25

   35 const_value: INT_CONST .

    $default  reduce using rule 35 (const_value)


State 26

   34 const_value: STR_CONST .

    $default  reduce using rule 34 (const_value)


State 27

   36 const_value: BOOLEAN_CONST .

    $default  reduce using rule 36 (const_value)


State 28

   37 const_value: REAL_CONST .

    $default  reduce using rule 37 (const_value)


State 29

   66 expression: '-' . expression

    IDENTIFIER     shift, and go to state 24
    INT_CONST      shift, and go to state 25
    STR_CONST      shift, and go to state 26
    BOOLEAN_CONST  shift, and go to state 27
    REAL_CONST     shift, and go to state 28
    '-'            shift, and go to state 29
    '~'            shift, and go to state 30
    '('            shift, and go to state 31

    const_value          go to state 32
    expression           go to state 46
    function_invocation  go to state 34


State 30

   64 expression: '~' . expression

    IDENTIFIER     shift, and go to state 24
    INT_CONST      shift, and go to state 25
    STR_CONST      shift, and go to state 26
    BOOLEAN_CONST  shift, and go to state 27
    REAL_CONST     shift, and go to state 28
    '-'            shift, and go to state 29
    '~'            shift, and go to state 30
    '('            shift, and go to state 31

    const_value          go to state 32
    expression           go to state 47
    function_invocation  go to state 34


State 31

   65 expression: '(' . expression ')'

    IDENTIFIER     shift, and go to state 24
    INT_CONST      shift, and go to state 25
    STR_CONST      shift, and go to state 26
    BOOLEAN_CONST  shift, and go to state 27
    REAL_CONST     shift, and go to state 28
    '-'            shift, and go to state 29
    '~'            shift, and go to state 30
    '('            shift, and go to state 31

    const_value          go to state 32
    expression           go to state 48
    function_invocation  go to state 34


State 32

   49 expression: const_value .

    $default  reduce using rule 49 (expression)


State 33

   19 constants: IDENTIFIER '=' expression . ';'
   51 expression: expression . '*' expression
   52           | expression . AND expression
   53           | expression . OR expression
   54           | expression . '/' expression
   55           | expression . '%' expression
   56           | expression . '+' expression
   57           | expression . '-' expression
   58           | expression . '<' expression
   59           | expression . '>' expression
   60           | expression . '=' expression
   61           | expression . LE_EQ expression
   62           | expression . GR_EQ expression
   63           | expression . NEQ expression

    AND    shift, and go to state 49
    OR     shift, and go to state 50
    LE_EQ  shift, and go to state 51
    GR_EQ  shift, and go to state 52
    NEQ    shift, and go to state 53
    '<'    shift, and go to state 54
    '>'    shift, and go to state 55
    '='    shift, and go to state 56
    '+'    shift, and go to state 57
    '-'    shift, and go to state 58
    '*'    shift, and go to state 59
    '/'    shift, and go to state 60
    '%'    shift, and go to state 61
    ';'    shift, and go to state 62


State 34

   50 expression: function_invocation .

    $default  reduce using rule 50 (expression)


State 35

   14 Procedure_dec: PROCEDURE IDENTIFIER . $@5 optional_arg_parentheses opt_func_type $@6 pro_dec2 IDENTIFIER ';'

    $default  reduce using rule 12 ($@5)

    $@5  go to state 63


State 36

    5 program: MODULE IDENTIFIER $@1 optional_var_con_declaration Procedure_dec_list $@2 . _BEGIN $@3 optional_statement $@4 END IDENTIFIER '.'

    _BEGIN  shift, and go to state 64


State 37

    9 Procedure_dec_list: Procedure_dec_list Procedure_dec .

    $default  reduce using rule 9 (Procedure_dec_list)


State 38

   18 constants: CONST IDENTIFIER '=' expression . ';'
   51 expression: expression . '*' expression
   52           | expression . AND expression
   53           | expression . OR expression
   54           | expression . '/' expression
   55           | expression . '%' expression
   56           | expression . '+' expression
   57           | expression . '-' expression
   58           | expression . '<' expression
   59           | expression . '>' expression
   60           | expression . '=' expression
   61           | expression . LE_EQ expression
   62           | expression . GR_EQ expression
   63           | expression . NEQ expression

    AND    shift, and go to state 49
    OR     shift, and go to state 50
    LE_EQ  shift, and go to state 51
    GR_EQ  shift, and go to state 52
    NEQ    shift, and go to state 53
    '<'    shift, and go to state 54
    '>'    shift, and go to state 55
    '='    shift, and go to state 56
    '+'    shift, and go to state 57
    '-'    shift, and go to state 58
    '*'    shift, and go to state 59
    '/'    shift, and go to state 60
    '%'    shift, and go to state 61
    ';'    shift, and go to state 65


State 39

   22 opt_IDENTIFIER: IDENTIFIER ',' opt_IDENTIFIER .

    $default  reduce using rule 22 (opt_IDENTIFIER)


State 40

   32 data_type: BOOLEAN .

    $default  reduce using rule 32 (data_type)


State 41

   31 data_type: INTEGER .

    $default  reduce using rule 31 (data_type)


State 42

   33 data_type: REAL .

    $default  reduce using rule 33 (data_type)


State 43

   30 data_type: STRING .

    $default  reduce using rule 30 (data_type)


State 44

   20 variables: opt_IDENTIFIER ':' data_type . ';' variables
   21          | opt_IDENTIFIER ':' data_type . ';'

    ';'  shift, and go to state 66


State 45

   77 function_invocation: IDENTIFIER '(' . optional_comma_separated_expression ')'

    IDENTIFIER     shift, and go to state 24
    INT_CONST      shift, and go to state 25
    STR_CONST      shift, and go to state 26
    BOOLEAN_CONST  shift, and go to state 27
    REAL_CONST     shift, and go to state 28
    '-'            shift, and go to state 29
    '~'            shift, and go to state 30
    '('            shift, and go to state 31

    const_value                          go to state 32
    expression                           go to state 67
    function_invocation                  go to state 34
    optional_comma_separated_expression  go to state 68


State 46

   51 expression: expression . '*' expression
   52           | expression . AND expression
   53           | expression . OR expression
   54           | expression . '/' expression
   55           | expression . '%' expression
   56           | expression . '+' expression
   57           | expression . '-' expression
   58           | expression . '<' expression
   59           | expression . '>' expression
   60           | expression . '=' expression
   61           | expression . LE_EQ expression
   62           | expression . GR_EQ expression
   63           | expression . NEQ expression
   66           | '-' expression .

    $default  reduce using rule 66 (expression)


State 47

   51 expression: expression . '*' expression
   52           | expression . AND expression
   53           | expression . OR expression
   54           | expression . '/' expression
   55           | expression . '%' expression
   56           | expression . '+' expression
   57           | expression . '-' expression
   58           | expression . '<' expression
   59           | expression . '>' expression
   60           | expression . '=' expression
   61           | expression . LE_EQ expression
   62           | expression . GR_EQ expression
   63           | expression . NEQ expression
   64           | '~' expression .

    $default  reduce using rule 64 (expression)


State 48

   51 expression: expression . '*' expression
   52           | expression . AND expression
   53           | expression . OR expression
   54           | expression . '/' expression
   55           | expression . '%' expression
   56           | expression . '+' expression
   57           | expression . '-' expression
   58           | expression . '<' expression
   59           | expression . '>' expression
   60           | expression . '=' expression
   61           | expression . LE_EQ expression
   62           | expression . GR_EQ expression
   63           | expression . NEQ expression
   65           | '(' expression . ')'

    AND    shift, and go to state 49
    OR     shift, and go to state 50
    LE_EQ  shift, and go to state 51
    GR_EQ  shift, and go to state 52
    NEQ    shift, and go to state 53
    '<'    shift, and go to state 54
    '>'    shift, and go to state 55
    '='    shift, and go to state 56
    '+'    shift, and go to state 57
    '-'    shift, and go to state 58
    '*'    shift, and go to state 59
    '/'    shift, and go to state 60
    '%'    shift, and go to state 61
    ')'    shift, and go to state 69


State 49

   52 expression: expression AND . expression

    IDENTIFIER     shift, and go to state 24
    INT_CONST      shift, and go to state 25
    STR_CONST      shift, and go to state 26
    BOOLEAN_CONST  shift, and go to state 27
    REAL_CONST     shift, and go to state 28
    '-'            shift, and go to state 29
    '~'            shift, and go to state 30
    '('            shift, and go to state 31

    const_value          go to state 32
    expression           go to state 70
    function_invocation  go to state 34


State 50

   53 expression: expression OR . expression

    IDENTIFIER     shift, and go to state 24
    INT_CONST      shift, and go to state 25
    STR_CONST      shift, and go to state 26
    BOOLEAN_CONST  shift, and go to state 27
    REAL_CONST     shift, and go to state 28
    '-'            shift, and go to state 29
    '~'            shift, and go to state 30
    '('            shift, and go to state 31

    const_value          go to state 32
    expression           go to state 71
    function_invocation  go to state 34


State 51

   61 expression: expression LE_EQ . expression

    IDENTIFIER     shift, and go to state 24
    INT_CONST      shift, and go to state 25
    STR_CONST      shift, and go to state 26
    BOOLEAN_CONST  shift, and go to state 27
    REAL_CONST     shift, and go to state 28
    '-'            shift, and go to state 29
    '~'            shift, and go to state 30
    '('            shift, and go to state 31

    const_value          go to state 32
    expression           go to state 72
    function_invocation  go to state 34


State 52

   62 expression: expression GR_EQ . expression

    IDENTIFIER     shift, and go to state 24
    INT_CONST      shift, and go to state 25
    STR_CONST      shift, and go to state 26
    BOOLEAN_CONST  shift, and go to state 27
    REAL_CONST     shift, and go to state 28
    '-'            shift, and go to state 29
    '~'            shift, and go to state 30
    '('            shift, and go to state 31

    const_value          go to state 32
    expression           go to state 73
    function_invocation  go to state 34


State 53

   63 expression: expression NEQ . expression

    IDENTIFIER     shift, and go to state 24
    INT_CONST      shift, and go to state 25
    STR_CONST      shift, and go to state 26
    BOOLEAN_CONST  shift, and go to state 27
    REAL_CONST     shift, and go to state 28
    '-'            shift, and go to state 29
    '~'            shift, and go to state 30
    '('            shift, and go to state 31

    const_value          go to state 32
    expression           go to state 74
    function_invocation  go to state 34


State 54

   58 expression: expression '<' . expression

    IDENTIFIER     shift, and go to state 24
    INT_CONST      shift, and go to state 25
    STR_CONST      shift, and go to state 26
    BOOLEAN_CONST  shift, and go to state 27
    REAL_CONST     shift, and go to state 28
    '-'            shift, and go to state 29
    '~'            shift, and go to state 30
    '('            shift, and go to state 31

    const_value          go to state 32
    expression           go to state 75
    function_invocation  go to state 34


State 55

   59 expression: expression '>' . expression

    IDENTIFIER     shift, and go to state 24
    INT_CONST      shift, and go to state 25
    STR_CONST      shift, and go to state 26
    BOOLEAN_CONST  shift, and go to state 27
    REAL_CONST     shift, and go to state 28
    '-'            shift, and go to state 29
    '~'            shift, and go to state 30
    '('            shift, and go to state 31

    const_value          go to state 32
    expression           go to state 76
    function_invocation  go to state 34


State 56

   60 expression: expression '=' . expression

    IDENTIFIER     shift, and go to state 24
    INT_CONST      shift, and go to state 25
    STR_CONST      shift, and go to state 26
    BOOLEAN_CONST  shift, and go to state 27
    REAL_CONST     shift, and go to state 28
    '-'            shift, and go to state 29
    '~'            shift, and go to state 30
    '('            shift, and go to state 31

    const_value          go to state 32
    expression           go to state 77
    function_invocation  go to state 34


State 57

   56 expression: expression '+' . expression

    IDENTIFIER     shift, and go to state 24
    INT_CONST      shift, and go to state 25
    STR_CONST      shift, and go to state 26
    BOOLEAN_CONST  shift, and go to state 27
    REAL_CONST     shift, and go to state 28
    '-'            shift, and go to state 29
    '~'            shift, and go to state 30
    '('            shift, and go to state 31

    const_value          go to state 32
    expression           go to state 78
    function_invocation  go to state 34


State 58

   57 expression: expression '-' . expression

    IDENTIFIER     shift, and go to state 24
    INT_CONST      shift, and go to state 25
    STR_CONST      shift, and go to state 26
    BOOLEAN_CONST  shift, and go to state 27
    REAL_CONST     shift, and go to state 28
    '-'            shift, and go to state 29
    '~'            shift, and go to state 30
    '('            shift, and go to state 31

    const_value          go to state 32
    expression           go to state 79
    function_invocation  go to state 34


State 59

   51 expression: expression '*' . expression

    IDENTIFIER     shift, and go to state 24
    INT_CONST      shift, and go to state 25
    STR_CONST      shift, and go to state 26
    BOOLEAN_CONST  shift, and go to state 27
    REAL_CONST     shift, and go to state 28
    '-'            shift, and go to state 29
    '~'            shift, and go to state 30
    '('            shift, and go to state 31

    const_value          go to state 32
    expression           go to state 80
    function_invocation  go to state 34


State 60

   54 expression: expression '/' . expression

    IDENTIFIER     shift, and go to state 24
    INT_CONST      shift, and go to state 25
    STR_CONST      shift, and go to state 26
    BOOLEAN_CONST  shift, and go to state 27
    REAL_CONST     shift, and go to state 28
    '-'            shift, and go to state 29
    '~'            shift, and go to state 30
    '('            shift, and go to state 31

    const_value          go to state 32
    expression           go to state 81
    function_invocation  go to state 34


State 61

   55 expression: expression '%' . expression

    IDENTIFIER     shift, and go to state 24
    INT_CONST      shift, and go to state 25
    STR_CONST      shift, and go to state 26
    BOOLEAN_CONST  shift, and go to state 27
    REAL_CONST     shift, and go to state 28
    '-'            shift, and go to state 29
    '~'            shift, and go to state 30
    '('            shift, and go to state 31

    const_value          go to state 32
    expression           go to state 82
    function_invocation  go to state 34


State 62

   19 constants: IDENTIFIER '=' expression ';' .

    $default  reduce using rule 19 (constants)


State 63

   14 Procedure_dec: PROCEDURE IDENTIFIER $@5 . optional_arg_parentheses opt_func_type $@6 pro_dec2 IDENTIFIER ';'

    '('  shift, and go to state 83

    $default  reduce using rule 26 (optional_arg_parentheses)

    optional_arg_parentheses  go to state 84


State 64

    5 program: MODULE IDENTIFIER $@1 optional_var_con_declaration Procedure_dec_list $@2 _BEGIN . $@3 optional_statement $@4 END IDENTIFIER '.'

    $default  reduce using rule 3 ($@3)

    $@3  go to state 85


State 65

   18 constants: CONST IDENTIFIER '=' expression ';' .

    $default  reduce using rule 18 (constants)


State 66

   20 variables: opt_IDENTIFIER ':' data_type ';' . variables
   21          | opt_IDENTIFIER ':' data_type ';' .

    IDENTIFIER  shift, and go to state 12

    IDENTIFIER  [reduce using rule 21 (variables)]
    ':'         reduce using rule 24 (opt_IDENTIFIER)
    $default    reduce using rule 21 (variables)

    variables       go to state 86
    opt_IDENTIFIER  go to state 14


State 67

   51 expression: expression . '*' expression
   52           | expression . AND expression
   53           | expression . OR expression
   54           | expression . '/' expression
   55           | expression . '%' expression
   56           | expression . '+' expression
   57           | expression . '-' expression
   58           | expression . '<' expression
   59           | expression . '>' expression
   60           | expression . '=' expression
   61           | expression . LE_EQ expression
   62           | expression . GR_EQ expression
   63           | expression . NEQ expression
   78 optional_comma_separated_expression: expression .

    AND    shift, and go to state 49
    OR     shift, and go to state 50
    LE_EQ  shift, and go to state 51
    GR_EQ  shift, and go to state 52
    NEQ    shift, and go to state 53
    '<'    shift, and go to state 54
    '>'    shift, and go to state 55
    '='    shift, and go to state 56
    '+'    shift, and go to state 57
    '-'    shift, and go to state 58
    '*'    shift, and go to state 59
    '/'    shift, and go to state 60
    '%'    shift, and go to state 61

    $default  reduce using rule 78 (optional_comma_separated_expression)


State 68

   77 function_invocation: IDENTIFIER '(' optional_comma_separated_expression . ')'
   79 optional_comma_separated_expression: optional_comma_separated_expression . ',' expression

    ','  shift, and go to state 87
    ')'  shift, and go to state 88


State 69

   65 expression: '(' expression ')' .

    $default  reduce using rule 65 (expression)


State 70

   51 expression: expression . '*' expression
   52           | expression . AND expression
   52           | expression AND expression .
   53           | expression . OR expression
   54           | expression . '/' expression
   55           | expression . '%' expression
   56           | expression . '+' expression
   57           | expression . '-' expression
   58           | expression . '<' expression
   59           | expression . '>' expression
   60           | expression . '=' expression
   61           | expression . LE_EQ expression
   62           | expression . GR_EQ expression
   63           | expression . NEQ expression

    LE_EQ  shift, and go to state 51
    GR_EQ  shift, and go to state 52
    NEQ    shift, and go to state 53
    '<'    shift, and go to state 54
    '>'    shift, and go to state 55
    '='    shift, and go to state 56
    '+'    shift, and go to state 57
    '-'    shift, and go to state 58
    '*'    shift, and go to state 59
    '/'    shift, and go to state 60
    '%'    shift, and go to state 61

    $default  reduce using rule 52 (expression)


State 71

   51 expression: expression . '*' expression
   52           | expression . AND expression
   53           | expression . OR expression
   53           | expression OR expression .
   54           | expression . '/' expression
   55           | expression . '%' expression
   56           | expression . '+' expression
   57           | expression . '-' expression
   58           | expression . '<' expression
   59           | expression . '>' expression
   60           | expression . '=' expression
   61           | expression . LE_EQ expression
   62           | expression . GR_EQ expression
   63           | expression . NEQ expression

    AND    shift, and go to state 49
    LE_EQ  shift, and go to state 51
    GR_EQ  shift, and go to state 52
    NEQ    shift, and go to state 53
    '<'    shift, and go to state 54
    '>'    shift, and go to state 55
    '='    shift, and go to state 56
    '+'    shift, and go to state 57
    '-'    shift, and go to state 58
    '*'    shift, and go to state 59
    '/'    shift, and go to state 60
    '%'    shift, and go to state 61

    $default  reduce using rule 53 (expression)


State 72

   51 expression: expression . '*' expression
   52           | expression . AND expression
   53           | expression . OR expression
   54           | expression . '/' expression
   55           | expression . '%' expression
   56           | expression . '+' expression
   57           | expression . '-' expression
   58           | expression . '<' expression
   59           | expression . '>' expression
   60           | expression . '=' expression
   61           | expression . LE_EQ expression
   61           | expression LE_EQ expression .
   62           | expression . GR_EQ expression
   63           | expression . NEQ expression

    '+'  shift, and go to state 57
    '-'  shift, and go to state 58
    '*'  shift, and go to state 59
    '/'  shift, and go to state 60
    '%'  shift, and go to state 61

    $default  reduce using rule 61 (expression)


State 73

   51 expression: expression . '*' expression
   52           | expression . AND expression
   53           | expression . OR expression
   54           | expression . '/' expression
   55           | expression . '%' expression
   56           | expression . '+' expression
   57           | expression . '-' expression
   58           | expression . '<' expression
   59           | expression . '>' expression
   60           | expression . '=' expression
   61           | expression . LE_EQ expression
   62           | expression . GR_EQ expression
   62           | expression GR_EQ expression .
   63           | expression . NEQ expression

    '+'  shift, and go to state 57
    '-'  shift, and go to state 58
    '*'  shift, and go to state 59
    '/'  shift, and go to state 60
    '%'  shift, and go to state 61

    $default  reduce using rule 62 (expression)


State 74

   51 expression: expression . '*' expression
   52           | expression . AND expression
   53           | expression . OR expression
   54           | expression . '/' expression
   55           | expression . '%' expression
   56           | expression . '+' expression
   57           | expression . '-' expression
   58           | expression . '<' expression
   59           | expression . '>' expression
   60           | expression . '=' expression
   61           | expression . LE_EQ expression
   62           | expression . GR_EQ expression
   63           | expression . NEQ expression
   63           | expression NEQ expression .

    LE_EQ  shift, and go to state 51
    GR_EQ  shift, and go to state 52
    '<'    shift, and go to state 54
    '>'    shift, and go to state 55
    '='    shift, and go to state 56
    '+'    shift, and go to state 57
    '-'    shift, and go to state 58
    '*'    shift, and go to state 59
    '/'    shift, and go to state 60
    '%'    shift, and go to state 61

    $default  reduce using rule 63 (expression)


State 75

   51 expression: expression . '*' expression
   52           | expression . AND expression
   53           | expression . OR expression
   54           | expression . '/' expression
   55           | expression . '%' expression
   56           | expression . '+' expression
   57           | expression . '-' expression
   58           | expression . '<' expression
   58           | expression '<' expression .
   59           | expression . '>' expression
   60           | expression . '=' expression
   61           | expression . LE_EQ expression
   62           | expression . GR_EQ expression
   63           | expression . NEQ expression

    '+'  shift, and go to state 57
    '-'  shift, and go to state 58
    '*'  shift, and go to state 59
    '/'  shift, and go to state 60
    '%'  shift, and go to state 61

    $default  reduce using rule 58 (expression)


State 76

   51 expression: expression . '*' expression
   52           | expression . AND expression
   53           | expression . OR expression
   54           | expression . '/' expression
   55           | expression . '%' expression
   56           | expression . '+' expression
   57           | expression . '-' expression
   58           | expression . '<' expression
   59           | expression . '>' expression
   59           | expression '>' expression .
   60           | expression . '=' expression
   61           | expression . LE_EQ expression
   62           | expression . GR_EQ expression
   63           | expression . NEQ expression

    '+'  shift, and go to state 57
    '-'  shift, and go to state 58
    '*'  shift, and go to state 59
    '/'  shift, and go to state 60
    '%'  shift, and go to state 61

    $default  reduce using rule 59 (expression)


State 77

   51 expression: expression . '*' expression
   52           | expression . AND expression
   53           | expression . OR expression
   54           | expression . '/' expression
   55           | expression . '%' expression
   56           | expression . '+' expression
   57           | expression . '-' expression
   58           | expression . '<' expression
   59           | expression . '>' expression
   60           | expression . '=' expression
   60           | expression '=' expression .
   61           | expression . LE_EQ expression
   62           | expression . GR_EQ expression
   63           | expression . NEQ expression

    '+'  shift, and go to state 57
    '-'  shift, and go to state 58
    '*'  shift, and go to state 59
    '/'  shift, and go to state 60
    '%'  shift, and go to state 61

    $default  reduce using rule 60 (expression)


State 78

   51 expression: expression . '*' expression
   52           | expression . AND expression
   53           | expression . OR expression
   54           | expression . '/' expression
   55           | expression . '%' expression
   56           | expression . '+' expression
   56           | expression '+' expression .
   57           | expression . '-' expression
   58           | expression . '<' expression
   59           | expression . '>' expression
   60           | expression . '=' expression
   61           | expression . LE_EQ expression
   62           | expression . GR_EQ expression
   63           | expression . NEQ expression

    '*'  shift, and go to state 59
    '/'  shift, and go to state 60
    '%'  shift, and go to state 61

    $default  reduce using rule 56 (expression)


State 79

   51 expression: expression . '*' expression
   52           | expression . AND expression
   53           | expression . OR expression
   54           | expression . '/' expression
   55           | expression . '%' expression
   56           | expression . '+' expression
   57           | expression . '-' expression
   57           | expression '-' expression .
   58           | expression . '<' expression
   59           | expression . '>' expression
   60           | expression . '=' expression
   61           | expression . LE_EQ expression
   62           | expression . GR_EQ expression
   63           | expression . NEQ expression

    '*'  shift, and go to state 59
    '/'  shift, and go to state 60
    '%'  shift, and go to state 61

    $default  reduce using rule 57 (expression)


State 80

   51 expression: expression . '*' expression
   51           | expression '*' expression .
   52           | expression . AND expression
   53           | expression . OR expression
   54           | expression . '/' expression
   55           | expression . '%' expression
   56           | expression . '+' expression
   57           | expression . '-' expression
   58           | expression . '<' expression
   59           | expression . '>' expression
   60           | expression . '=' expression
   61           | expression . LE_EQ expression
   62           | expression . GR_EQ expression
   63           | expression . NEQ expression

    $default  reduce using rule 51 (expression)


State 81

   51 expression: expression . '*' expression
   52           | expression . AND expression
   53           | expression . OR expression
   54           | expression . '/' expression
   54           | expression '/' expression .
   55           | expression . '%' expression
   56           | expression . '+' expression
   57           | expression . '-' expression
   58           | expression . '<' expression
   59           | expression . '>' expression
   60           | expression . '=' expression
   61           | expression . LE_EQ expression
   62           | expression . GR_EQ expression
   63           | expression . NEQ expression

    $default  reduce using rule 54 (expression)


State 82

   51 expression: expression . '*' expression
   52           | expression . AND expression
   53           | expression . OR expression
   54           | expression . '/' expression
   55           | expression . '%' expression
   55           | expression '%' expression .
   56           | expression . '+' expression
   57           | expression . '-' expression
   58           | expression . '<' expression
   59           | expression . '>' expression
   60           | expression . '=' expression
   61           | expression . LE_EQ expression
   62           | expression . GR_EQ expression
   63           | expression . NEQ expression

    $default  reduce using rule 55 (expression)


State 83

   25 optional_arg_parentheses: '(' . optional_arguments ')'

    IDENTIFIER  shift, and go to state 89

    $default  reduce using rule 29 (optional_arguments)

    optional_arguments  go to state 90


State 84

   14 Procedure_dec: PROCEDURE IDENTIFIER $@5 optional_arg_parentheses . opt_func_type $@6 pro_dec2 IDENTIFIER ';'

    ':'  shift, and go to state 91

    $default  reduce using rule 17 (opt_func_type)

    opt_func_type  go to state 92


State 85

    5 program: MODULE IDENTIFIER $@1 optional_var_con_declaration Procedure_dec_list $@2 _BEGIN $@3 . optional_statement $@4 END IDENTIFIER '.'

    IF             shift, and go to state 93
    RETURN         shift, and go to state 94
    WHILE          shift, and go to state 95
    IDENTIFIER     shift, and go to state 96
    INT_CONST      shift, and go to state 25
    STR_CONST      shift, and go to state 26
    BOOLEAN_CONST  shift, and go to state 27
    REAL_CONST     shift, and go to state 28
    '-'            shift, and go to state 29
    '~'            shift, and go to state 30
    '('            shift, and go to state 31

    PRINTLN   reduce using rule 41 ($@8)
    $default  reduce using rule 39 ($@7)

    const_value            go to state 32
    statement              go to state 97
    $@7                    go to state 98
    $@8                    go to state 99
    expression             go to state 100
    conditional_statement  go to state 101
    condition_title        go to state 102
    loop_statement         go to state 103
    optional_statement     go to state 104
    function_invocation    go to state 34


State 86

   20 variables: opt_IDENTIFIER ':' data_type ';' variables .

    $default  reduce using rule 20 (variables)


State 87

   79 optional_comma_separated_expression: optional_comma_separated_expression ',' . expression

    IDENTIFIER     shift, and go to state 24
    INT_CONST      shift, and go to state 25
    STR_CONST      shift, and go to state 26
    BOOLEAN_CONST  shift, and go to state 27
    REAL_CONST     shift, and go to state 28
    '-'            shift, and go to state 29
    '~'            shift, and go to state 30
    '('            shift, and go to state 31

    const_value          go to state 32
    expression           go to state 105
    function_invocation  go to state 34


State 88

   77 function_invocation: IDENTIFIER '(' optional_comma_separated_expression ')' .

    $default  reduce using rule 77 (function_invocation)


State 89

   27 optional_arguments: IDENTIFIER . ':' data_type

    ':'  shift, and go to state 106


State 90

   25 optional_arg_parentheses: '(' optional_arguments . ')'
   28 optional_arguments: optional_arguments . ',' IDENTIFIER ':' data_type

    ','  shift, and go to state 107
    ')'  shift, and go to state 108


State 91

   16 opt_func_type: ':' . data_type

    BOOLEAN  shift, and go to state 40
    INTEGER  shift, and go to state 41
    REAL     shift, and go to state 42
    STRING   shift, and go to state 43

    data_type  go to state 109


State 92

   14 Procedure_dec: PROCEDURE IDENTIFIER $@5 optional_arg_parentheses opt_func_type . $@6 pro_dec2 IDENTIFIER ';'

    $default  reduce using rule 13 ($@6)

    $@6  go to state 110


State 93

   71 condition_title: IF . '(' expression ')' THEN

    '('  shift, and go to state 111


State 94

   43 statement: RETURN . ';'
   44          | RETURN . expression ';'

    IDENTIFIER     shift, and go to state 24
    INT_CONST      shift, and go to state 25
    STR_CONST      shift, and go to state 26
    BOOLEAN_CONST  shift, and go to state 27
    REAL_CONST     shift, and go to state 28
    '-'            shift, and go to state 29
    '~'            shift, and go to state 30
    ';'            shift, and go to state 112
    '('            shift, and go to state 31

    const_value          go to state 32
    expression           go to state 113
    function_invocation  go to state 34


State 95

   74 loop_statement: WHILE . '(' $@11 expression ')' DO $@12 optional_statement END ';'

    '('  shift, and go to state 114


State 96

   38 statement: IDENTIFIER . EQ expression ';'
   48 expression: IDENTIFIER .
   77 function_invocation: IDENTIFIER . '(' optional_comma_separated_expression ')'

    EQ   shift, and go to state 115
    '('  shift, and go to state 45

    $default  reduce using rule 48 (expression)


State 97

   75 optional_statement: statement . optional_statement
   76                   | statement .

    IF             shift, and go to state 93
    RETURN         shift, and go to state 94
    WHILE          shift, and go to state 95
    IDENTIFIER     shift, and go to state 96
    INT_CONST      shift, and go to state 25
    STR_CONST      shift, and go to state 26
    BOOLEAN_CONST  shift, and go to state 27
    REAL_CONST     shift, and go to state 28
    '-'            shift, and go to state 29
    '~'            shift, and go to state 30
    '('            shift, and go to state 31

    PRINT     reduce using rule 39 ($@7)
    PRINTLN   reduce using rule 41 ($@8)
    $default  reduce using rule 76 (optional_statement)

    const_value            go to state 32
    statement              go to state 97
    $@7                    go to state 98
    $@8                    go to state 99
    expression             go to state 100
    conditional_statement  go to state 101
    condition_title        go to state 102
    loop_statement         go to state 103
    optional_statement     go to state 116
    function_invocation    go to state 34


State 98

   40 statement: $@7 . PRINT expression ';'

    PRINT  shift, and go to state 117


State 99

   42 statement: $@8 . PRINTLN expression ';'

    PRINTLN  shift, and go to state 118


State 100

   45 statement: expression . ';'
   51 expression: expression . '*' expression
   52           | expression . AND expression
   53           | expression . OR expression
   54           | expression . '/' expression
   55           | expression . '%' expression
   56           | expression . '+' expression
   57           | expression . '-' expression
   58           | expression . '<' expression
   59           | expression . '>' expression
   60           | expression . '=' expression
   61           | expression . LE_EQ expression
   62           | expression . GR_EQ expression
   63           | expression . NEQ expression

    AND    shift, and go to state 49
    OR     shift, and go to state 50
    LE_EQ  shift, and go to state 51
    GR_EQ  shift, and go to state 52
    NEQ    shift, and go to state 53
    '<'    shift, and go to state 54
    '>'    shift, and go to state 55
    '='    shift, and go to state 56
    '+'    shift, and go to state 57
    '-'    shift, and go to state 58
    '*'    shift, and go to state 59
    '/'    shift, and go to state 60
    '%'    shift, and go to state 61
    ';'    shift, and go to state 119


State 101

   46 statement: conditional_statement .

    $default  reduce using rule 46 (statement)


State 102

   67 conditional_statement: condition_title . optional_statement END ';'
   70                      | condition_title . optional_statement $@9 ELSE $@10 optional_statement END ';'

    IF             shift, and go to state 93
    RETURN         shift, and go to state 94
    WHILE          shift, and go to state 95
    IDENTIFIER     shift, and go to state 96
    INT_CONST      shift, and go to state 25
    STR_CONST      shift, and go to state 26
    BOOLEAN_CONST  shift, and go to state 27
    REAL_CONST     shift, and go to state 28
    '-'            shift, and go to state 29
    '~'            shift, and go to state 30
    '('            shift, and go to state 31

    PRINTLN   reduce using rule 41 ($@8)
    $default  reduce using rule 39 ($@7)

    const_value            go to state 32
    statement              go to state 97
    $@7                    go to state 98
    $@8                    go to state 99
    expression             go to state 100
    conditional_statement  go to state 101
    condition_title        go to state 102
    loop_statement         go to state 103
    optional_statement     go to state 120
    function_invocation    go to state 34


State 103

   47 statement: loop_statement .

    $default  reduce using rule 47 (statement)


State 104

    5 program: MODULE IDENTIFIER $@1 optional_var_con_declaration Procedure_dec_list $@2 _BEGIN $@3 optional_statement . $@4 END IDENTIFIER '.'

    $default  reduce using rule 4 ($@4)

    $@4  go to state 121


State 105

   51 expression: expression . '*' expression
   52           | expression . AND expression
   53           | expression . OR expression
   54           | expression . '/' expression
   55           | expression . '%' expression
   56           | expression . '+' expression
   57           | expression . '-' expression
   58           | expression . '<' expression
   59           | expression . '>' expression
   60           | expression . '=' expression
   61           | expression . LE_EQ expression
   62           | expression . GR_EQ expression
   63           | expression . NEQ expression
   79 optional_comma_separated_expression: optional_comma_separated_expression ',' expression .

    AND    shift, and go to state 49
    OR     shift, and go to state 50
    LE_EQ  shift, and go to state 51
    GR_EQ  shift, and go to state 52
    NEQ    shift, and go to state 53
    '<'    shift, and go to state 54
    '>'    shift, and go to state 55
    '='    shift, and go to state 56
    '+'    shift, and go to state 57
    '-'    shift, and go to state 58
    '*'    shift, and go to state 59
    '/'    shift, and go to state 60
    '%'    shift, and go to state 61

    $default  reduce using rule 79 (optional_comma_separated_expression)


State 106

   27 optional_arguments: IDENTIFIER ':' . data_type

    BOOLEAN  shift, and go to state 40
    INTEGER  shift, and go to state 41
    REAL     shift, and go to state 42
    STRING   shift, and go to state 43

    data_type  go to state 122


State 107

   28 optional_arguments: optional_arguments ',' . IDENTIFIER ':' data_type

    IDENTIFIER  shift, and go to state 123


State 108

   25 optional_arg_parentheses: '(' optional_arguments ')' .

    $default  reduce using rule 25 (optional_arg_parentheses)


State 109

   16 opt_func_type: ':' data_type .

    $default  reduce using rule 16 (opt_func_type)


State 110

   14 Procedure_dec: PROCEDURE IDENTIFIER $@5 optional_arg_parentheses opt_func_type $@6 . pro_dec2 IDENTIFIER ';'

    CONST       shift, and go to state 6
    VAR         shift, and go to state 7
    IDENTIFIER  shift, and go to state 8

    $default  reduce using rule 8 (optional_var_con_declaration)

    optional_var_con_declaration  go to state 124
    pro_dec2                      go to state 125
    constants                     go to state 10


State 111

   71 condition_title: IF '(' . expression ')' THEN

    IDENTIFIER     shift, and go to state 24
    INT_CONST      shift, and go to state 25
    STR_CONST      shift, and go to state 26
    BOOLEAN_CONST  shift, and go to state 27
    REAL_CONST     shift, and go to state 28
    '-'            shift, and go to state 29
    '~'            shift, and go to state 30
    '('            shift, and go to state 31

    const_value          go to state 32
    expression           go to state 126
    function_invocation  go to state 34


State 112

   43 statement: RETURN ';' .

    $default  reduce using rule 43 (statement)


State 113

   44 statement: RETURN expression . ';'
   51 expression: expression . '*' expression
   52           | expression . AND expression
   53           | expression . OR expression
   54           | expression . '/' expression
   55           | expression . '%' expression
   56           | expression . '+' expression
   57           | expression . '-' expression
   58           | expression . '<' expression
   59           | expression . '>' expression
   60           | expression . '=' expression
   61           | expression . LE_EQ expression
   62           | expression . GR_EQ expression
   63           | expression . NEQ expression

    AND    shift, and go to state 49
    OR     shift, and go to state 50
    LE_EQ  shift, and go to state 51
    GR_EQ  shift, and go to state 52
    NEQ    shift, and go to state 53
    '<'    shift, and go to state 54
    '>'    shift, and go to state 55
    '='    shift, and go to state 56
    '+'    shift, and go to state 57
    '-'    shift, and go to state 58
    '*'    shift, and go to state 59
    '/'    shift, and go to state 60
    '%'    shift, and go to state 61
    ';'    shift, and go to state 127


State 114

   74 loop_statement: WHILE '(' . $@11 expression ')' DO $@12 optional_statement END ';'

    $default  reduce using rule 72 ($@11)

    $@11  go to state 128


State 115

   38 statement: IDENTIFIER EQ . expression ';'

    IDENTIFIER     shift, and go to state 24
    INT_CONST      shift, and go to state 25
    STR_CONST      shift, and go to state 26
    BOOLEAN_CONST  shift, and go to state 27
    REAL_CONST     shift, and go to state 28
    '-'            shift, and go to state 29
    '~'            shift, and go to state 30
    '('            shift, and go to state 31

    const_value          go to state 32
    expression           go to state 129
    function_invocation  go to state 34


State 116

   75 optional_statement: statement optional_statement .

    $default  reduce using rule 75 (optional_statement)


State 117

   40 statement: $@7 PRINT . expression ';'

    IDENTIFIER     shift, and go to state 24
    INT_CONST      shift, and go to state 25
    STR_CONST      shift, and go to state 26
    BOOLEAN_CONST  shift, and go to state 27
    REAL_CONST     shift, and go to state 28
    '-'            shift, and go to state 29
    '~'            shift, and go to state 30
    '('            shift, and go to state 31

    const_value          go to state 32
    expression           go to state 130
    function_invocation  go to state 34


State 118

   42 statement: $@8 PRINTLN . expression ';'

    IDENTIFIER     shift, and go to state 24
    INT_CONST      shift, and go to state 25
    STR_CONST      shift, and go to state 26
    BOOLEAN_CONST  shift, and go to state 27
    REAL_CONST     shift, and go to state 28
    '-'            shift, and go to state 29
    '~'            shift, and go to state 30
    '('            shift, and go to state 31

    const_value          go to state 32
    expression           go to state 131
    function_invocation  go to state 34


State 119

   45 statement: expression ';' .

    $default  reduce using rule 45 (statement)


State 120

   67 conditional_statement: condition_title optional_statement . END ';'
   70                      | condition_title optional_statement . $@9 ELSE $@10 optional_statement END ';'

    END  shift, and go to state 132

    $default  reduce using rule 68 ($@9)

    $@9  go to state 133


State 121

    5 program: MODULE IDENTIFIER $@1 optional_var_con_declaration Procedure_dec_list $@2 _BEGIN $@3 optional_statement $@4 . END IDENTIFIER '.'

    END  shift, and go to state 134


State 122

   27 optional_arguments: IDENTIFIER ':' data_type .

    $default  reduce using rule 27 (optional_arguments)


State 123

   28 optional_arguments: optional_arguments ',' IDENTIFIER . ':' data_type

    ':'  shift, and go to state 135


State 124

   15 pro_dec2: optional_var_con_declaration . _BEGIN optional_statement END

    _BEGIN  shift, and go to state 136


State 125

   14 Procedure_dec: PROCEDURE IDENTIFIER $@5 optional_arg_parentheses opt_func_type $@6 pro_dec2 . IDENTIFIER ';'

    IDENTIFIER  shift, and go to state 137


State 126

   51 expression: expression . '*' expression
   52           | expression . AND expression
   53           | expression . OR expression
   54           | expression . '/' expression
   55           | expression . '%' expression
   56           | expression . '+' expression
   57           | expression . '-' expression
   58           | expression . '<' expression
   59           | expression . '>' expression
   60           | expression . '=' expression
   61           | expression . LE_EQ expression
   62           | expression . GR_EQ expression
   63           | expression . NEQ expression
   71 condition_title: IF '(' expression . ')' THEN

    AND    shift, and go to state 49
    OR     shift, and go to state 50
    LE_EQ  shift, and go to state 51
    GR_EQ  shift, and go to state 52
    NEQ    shift, and go to state 53
    '<'    shift, and go to state 54
    '>'    shift, and go to state 55
    '='    shift, and go to state 56
    '+'    shift, and go to state 57
    '-'    shift, and go to state 58
    '*'    shift, and go to state 59
    '/'    shift, and go to state 60
    '%'    shift, and go to state 61
    ')'    shift, and go to state 138


State 127

   44 statement: RETURN expression ';' .

    $default  reduce using rule 44 (statement)


State 128

   74 loop_statement: WHILE '(' $@11 . expression ')' DO $@12 optional_statement END ';'

    IDENTIFIER     shift, and go to state 24
    INT_CONST      shift, and go to state 25
    STR_CONST      shift, and go to state 26
    BOOLEAN_CONST  shift, and go to state 27
    REAL_CONST     shift, and go to state 28
    '-'            shift, and go to state 29
    '~'            shift, and go to state 30
    '('            shift, and go to state 31

    const_value          go to state 32
    expression           go to state 139
    function_invocation  go to state 34


State 129

   38 statement: IDENTIFIER EQ expression . ';'
   51 expression: expression . '*' expression
   52           | expression . AND expression
   53           | expression . OR expression
   54           | expression . '/' expression
   55           | expression . '%' expression
   56           | expression . '+' expression
   57           | expression . '-' expression
   58           | expression . '<' expression
   59           | expression . '>' expression
   60           | expression . '=' expression
   61           | expression . LE_EQ expression
   62           | expression . GR_EQ expression
   63           | expression . NEQ expression

    AND    shift, and go to state 49
    OR     shift, and go to state 50
    LE_EQ  shift, and go to state 51
    GR_EQ  shift, and go to state 52
    NEQ    shift, and go to state 53
    '<'    shift, and go to state 54
    '>'    shift, and go to state 55
    '='    shift, and go to state 56
    '+'    shift, and go to state 57
    '-'    shift, and go to state 58
    '*'    shift, and go to state 59
    '/'    shift, and go to state 60
    '%'    shift, and go to state 61
    ';'    shift, and go to state 140


State 130

   40 statement: $@7 PRINT expression . ';'
   51 expression: expression . '*' expression
   52           | expression . AND expression
   53           | expression . OR expression
   54           | expression . '/' expression
   55           | expression . '%' expression
   56           | expression . '+' expression
   57           | expression . '-' expression
   58           | expression . '<' expression
   59           | expression . '>' expression
   60           | expression . '=' expression
   61           | expression . LE_EQ expression
   62           | expression . GR_EQ expression
   63           | expression . NEQ expression

    AND    shift, and go to state 49
    OR     shift, and go to state 50
    LE_EQ  shift, and go to state 51
    GR_EQ  shift, and go to state 52
    NEQ    shift, and go to state 53
    '<'    shift, and go to state 54
    '>'    shift, and go to state 55
    '='    shift, and go to state 56
    '+'    shift, and go to state 57
    '-'    shift, and go to state 58
    '*'    shift, and go to state 59
    '/'    shift, and go to state 60
    '%'    shift, and go to state 61
    ';'    shift, and go to state 141


State 131

   42 statement: $@8 PRINTLN expression . ';'
   51 expression: expression . '*' expression
   52           | expression . AND expression
   53           | expression . OR expression
   54           | expression . '/' expression
   55           | expression . '%' expression
   56           | expression . '+' expression
   57           | expression . '-' expression
   58           | expression . '<' expression
   59           | expression . '>' expression
   60           | expression . '=' expression
   61           | expression . LE_EQ expression
   62           | expression . GR_EQ expression
   63           | expression . NEQ expression

    AND    shift, and go to state 49
    OR     shift, and go to state 50
    LE_EQ  shift, and go to state 51
    GR_EQ  shift, and go to state 52
    NEQ    shift, and go to state 53
    '<'    shift, and go to state 54
    '>'    shift, and go to state 55
    '='    shift, and go to state 56
    '+'    shift, and go to state 57
    '-'    shift, and go to state 58
    '*'    shift, and go to state 59
    '/'    shift, and go to state 60
    '%'    shift, and go to state 61
    ';'    shift, and go to state 142


State 132

   67 conditional_statement: condition_title optional_statement END . ';'

    ';'  shift, and go to state 143


State 133

   70 conditional_statement: condition_title optional_statement $@9 . ELSE $@10 optional_statement END ';'

    ELSE  shift, and go to state 144


State 134

    5 program: MODULE IDENTIFIER $@1 optional_var_con_declaration Procedure_dec_list $@2 _BEGIN $@3 optional_statement $@4 END . IDENTIFIER '.'

    IDENTIFIER  shift, and go to state 145


State 135

   28 optional_arguments: optional_arguments ',' IDENTIFIER ':' . data_type

    BOOLEAN  shift, and go to state 40
    INTEGER  shift, and go to state 41
    REAL     shift, and go to state 42
    STRING   shift, and go to state 43

    data_type  go to state 146


State 136

   15 pro_dec2: optional_var_con_declaration _BEGIN . optional_statement END

    IF             shift, and go to state 93
    RETURN         shift, and go to state 94
    WHILE          shift, and go to state 95
    IDENTIFIER     shift, and go to state 96
    INT_CONST      shift, and go to state 25
    STR_CONST      shift, and go to state 26
    BOOLEAN_CONST  shift, and go to state 27
    REAL_CONST     shift, and go to state 28
    '-'            shift, and go to state 29
    '~'            shift, and go to state 30
    '('            shift, and go to state 31

    PRINTLN   reduce using rule 41 ($@8)
    $default  reduce using rule 39 ($@7)

    const_value            go to state 32
    statement              go to state 97
    $@7                    go to state 98
    $@8                    go to state 99
    expression             go to state 100
    conditional_statement  go to state 101
    condition_title        go to state 102
    loop_statement         go to state 103
    optional_statement     go to state 147
    function_invocation    go to state 34


State 137

   14 Procedure_dec: PROCEDURE IDENTIFIER $@5 optional_arg_parentheses opt_func_type $@6 pro_dec2 IDENTIFIER . ';'

    ';'  shift, and go to state 148


State 138

   71 condition_title: IF '(' expression ')' . THEN

    THEN  shift, and go to state 149


State 139

   51 expression: expression . '*' expression
   52           | expression . AND expression
   53           | expression . OR expression
   54           | expression . '/' expression
   55           | expression . '%' expression
   56           | expression . '+' expression
   57           | expression . '-' expression
   58           | expression . '<' expression
   59           | expression . '>' expression
   60           | expression . '=' expression
   61           | expression . LE_EQ expression
   62           | expression . GR_EQ expression
   63           | expression . NEQ expression
   74 loop_statement: WHILE '(' $@11 expression . ')' DO $@12 optional_statement END ';'

    AND    shift, and go to state 49
    OR     shift, and go to state 50
    LE_EQ  shift, and go to state 51
    GR_EQ  shift, and go to state 52
    NEQ    shift, and go to state 53
    '<'    shift, and go to state 54
    '>'    shift, and go to state 55
    '='    shift, and go to state 56
    '+'    shift, and go to state 57
    '-'    shift, and go to state 58
    '*'    shift, and go to state 59
    '/'    shift, and go to state 60
    '%'    shift, and go to state 61
    ')'    shift, and go to state 150


State 140

   38 statement: IDENTIFIER EQ expression ';' .

    $default  reduce using rule 38 (statement)


State 141

   40 statement: $@7 PRINT expression ';' .

    $default  reduce using rule 40 (statement)


State 142

   42 statement: $@8 PRINTLN expression ';' .

    $default  reduce using rule 42 (statement)


State 143

   67 conditional_statement: condition_title optional_statement END ';' .

    $default  reduce using rule 67 (conditional_statement)


State 144

   70 conditional_statement: condition_title optional_statement $@9 ELSE . $@10 optional_statement END ';'

    $default  reduce using rule 69 ($@10)

    $@10  go to state 151


State 145

    5 program: MODULE IDENTIFIER $@1 optional_var_con_declaration Procedure_dec_list $@2 _BEGIN $@3 optional_statement $@4 END IDENTIFIER . '.'

    '.'  shift, and go to state 152


State 146

   28 optional_arguments: optional_arguments ',' IDENTIFIER ':' data_type .

    $default  reduce using rule 28 (optional_arguments)


State 147

   15 pro_dec2: optional_var_con_declaration _BEGIN optional_statement . END

    END  shift, and go to state 153


State 148

   14 Procedure_dec: PROCEDURE IDENTIFIER $@5 optional_arg_parentheses opt_func_type $@6 pro_dec2 IDENTIFIER ';' .

    $default  reduce using rule 14 (Procedure_dec)


State 149

   71 condition_title: IF '(' expression ')' THEN .

    $default  reduce using rule 71 (condition_title)


State 150

   74 loop_statement: WHILE '(' $@11 expression ')' . DO $@12 optional_statement END ';'

    DO  shift, and go to state 154


State 151

   70 conditional_statement: condition_title optional_statement $@9 ELSE $@10 . optional_statement END ';'

    IF             shift, and go to state 93
    RETURN         shift, and go to state 94
    WHILE          shift, and go to state 95
    IDENTIFIER     shift, and go to state 96
    INT_CONST      shift, and go to state 25
    STR_CONST      shift, and go to state 26
    BOOLEAN_CONST  shift, and go to state 27
    REAL_CONST     shift, and go to state 28
    '-'            shift, and go to state 29
    '~'            shift, and go to state 30
    '('            shift, and go to state 31

    PRINTLN   reduce using rule 41 ($@8)
    $default  reduce using rule 39 ($@7)

    const_value            go to state 32
    statement              go to state 97
    $@7                    go to state 98
    $@8                    go to state 99
    expression             go to state 100
    conditional_statement  go to state 101
    condition_title        go to state 102
    loop_statement         go to state 103
    optional_statement     go to state 155
    function_invocation    go to state 34


State 152

    5 program: MODULE IDENTIFIER $@1 optional_var_con_declaration Procedure_dec_list $@2 _BEGIN $@3 optional_statement $@4 END IDENTIFIER '.' .

    $default  reduce using rule 5 (program)


State 153

   15 pro_dec2: optional_var_con_declaration _BEGIN optional_statement END .

    $default  reduce using rule 15 (pro_dec2)


State 154

   74 loop_statement: WHILE '(' $@11 expression ')' DO . $@12 optional_statement END ';'

    $default  reduce using rule 73 ($@12)

    $@12  go to state 156


State 155

   70 conditional_statement: condition_title optional_statement $@9 ELSE $@10 optional_statement . END ';'

    END  shift, and go to state 157


State 156

   74 loop_statement: WHILE '(' $@11 expression ')' DO $@12 . optional_statement END ';'

    IF             shift, and go to state 93
    RETURN         shift, and go to state 94
    WHILE          shift, and go to state 95
    IDENTIFIER     shift, and go to state 96
    INT_CONST      shift, and go to state 25
    STR_CONST      shift, and go to state 26
    BOOLEAN_CONST  shift, and go to state 27
    REAL_CONST     shift, and go to state 28
    '-'            shift, and go to state 29
    '~'            shift, and go to state 30
    '('            shift, and go to state 31

    PRINTLN   reduce using rule 41 ($@8)
    $default  reduce using rule 39 ($@7)

    const_value            go to state 32
    statement              go to state 97
    $@7                    go to state 98
    $@8                    go to state 99
    expression             go to state 100
    conditional_statement  go to state 101
    condition_title        go to state 102
    loop_statement         go to state 103
    optional_statement     go to state 158
    function_invocation    go to state 34


State 157

   70 conditional_statement: condition_title optional_statement $@9 ELSE $@10 optional_statement END . ';'

    ';'  shift, and go to state 159


State 158

   74 loop_statement: WHILE '(' $@11 expression ')' DO $@12 optional_statement . END ';'

    END  shift, and go to state 160


State 159

   70 conditional_statement: condition_title optional_statement $@9 ELSE $@10 optional_statement END ';' .

    $default  reduce using rule 70 (conditional_statement)


State 160

   74 loop_statement: WHILE '(' $@11 expression ')' DO $@12 optional_statement END . ';'

    ';'  shift, and go to state 161


State 161

   74 loop_statement: WHILE '(' $@11 expression ')' DO $@12 optional_statement END ';' .

    $default  reduce using rule 74 (loop_statement)
